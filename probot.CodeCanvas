{
	"drawioXML": "<mxfile>\n  <diagram id=\"Z5iIU8EPdk7T_u07Guoi\" name=\"Page-1\">\n    <mxGraphModel dx=\"1462\" dy=\"812\" grid=\"0\" gridSize=\"10\" guides=\"1\" tooltips=\"1\" connect=\"0\" arrows=\"1\" fold=\"1\" page=\"0\" pageScale=\"1\" pageWidth=\"850\" pageHeight=\"1100\" math=\"0\" shadow=\"0\">\n      <root>\n        <mxCell id=\"0\" />\n        <mxCell id=\"1\" parent=\"0\" />\n      </root>\n    </mxGraphModel>\n  </diagram>\n</mxfile>\n",
	"fileName": "",
	"fileURL": "github",
	"repoData": {
		"README.md": {
			"path": "README.md",
			"fileName": "README.md",
			"cellName": "README.md",
			"cellId": "1231d67d-18e9-487d-b1a7-264a545c5071",
			"visible": true,
			"children": [
				"README.md-simstep-1fa3242a-30a6-47f3-92c6-e24d99de8400",
				"README.md-simstep-ffa39cdb-f8f8-4068-8109-22b9508de8b2",
				"README.md-simstep-14469756-3d44-4c86-a1af-af4433dd90d9",
				"README.md-simstep-61dd7d91-4018-44c6-9f04-fae757f37fc1",
				"README.md-simstep-82ab5fa7-8cd5-4957-8c0e-65a48f05260e"
			]
		},
		"docs": {
			"path": "docs",
			"fileName": "docs",
			"cellName": "docs",
			"cellId": "94262796-7ba1-44c0-9336-cc766815a952",
			"visible": true,
			"children": [
				"docs/webhooks.md"
			]
		},
		"docs/webhooks.md": {
			"path": "docs/webhooks.md",
			"fileName": "webhooks.md",
			"cellName": "webhooks.md",
			"cellId": "f184896a-f610-4cfa-9b3c-e052268b68ee",
			"visible": true,
			"parentCellId": "94262796-7ba1-44c0-9336-cc766815a952"
		},
		"src": {
			"path": "src",
			"fileName": "src",
			"cellName": "src",
			"cellId": "bb0dfd53-d4cf-44ed-9c44-7a0e74e6bcf6",
			"visible": true,
			"children": [
				"src/run.ts",
				"src/server",
				"src/probot.ts",
				"src/octokit",
				"src/context.ts"
			]
		},
		"src/context.ts": {
			"path": "src/context.ts",
			"fileName": "context.ts",
			"cellName": "context.ts",
			"cellId": "66daf256-fda1-41f5-8fcb-d21c2457b45f",
			"visible": true,
			"parentCellId": "bb0dfd53-d4cf-44ed-9c44-7a0e74e6bcf6",
			"children": [
				"src/context.ts-simstep-fe49307b-9025-44e8-a357-ec587ab24542"
			]
		},
		"src/octokit": {
			"path": "src/octokit",
			"fileName": "octokit",
			"cellName": "octokit",
			"cellId": "bd0e0141-c889-4091-84f0-eab9c744a6e4",
			"visible": true,
			"parentCellId": "bb0dfd53-d4cf-44ed-9c44-7a0e74e6bcf6",
			"children": [
				"src/octokit/get-webhooks.ts",
				"src/octokit/probot-octokit.ts",
				"src/octokit/get-authenticated-octokit.ts",
				"src/octokit/get-probot-octokit-with-defaults.ts",
				"src/octokit/octokit-webhooks-transform.ts",
				"src/octokit/octokit-plugin-probot-request-logging.ts"
			]
		},
		"src/octokit/get-authenticated-octokit.ts": {
			"path": "src/octokit/get-authenticated-octokit.ts",
			"fileName": "get-authenticated-octokit.ts",
			"cellName": "get-authenticated-octokit.ts",
			"cellId": "9a8c6adc-56f6-468d-9a27-04247bb61197",
			"visible": true,
			"parentCellId": "bd0e0141-c889-4091-84f0-eab9c744a6e4",
			"children": [
				"src/octokit/get-authenticated-octokit.ts-simstep-a872dc1a-f796-4da1-a9cb-736bc5464838"
			]
		},
		"src/octokit/get-probot-octokit-with-defaults.ts": {
			"path": "src/octokit/get-probot-octokit-with-defaults.ts",
			"fileName": "get-probot-octokit-with-defaults.ts",
			"cellName": "get-probot-octokit-with-defaults.ts",
			"cellId": "f9ec4e3c-3737-4fef-acd7-dcb38e027025",
			"visible": true,
			"parentCellId": "bd0e0141-c889-4091-84f0-eab9c744a6e4"
		},
		"src/octokit/get-webhooks.ts": {
			"path": "src/octokit/get-webhooks.ts",
			"fileName": "get-webhooks.ts",
			"cellName": "get-webhooks.ts",
			"cellId": "646f959f-28e2-4e12-bcf3-9491b199e490",
			"visible": true,
			"parentCellId": "bd0e0141-c889-4091-84f0-eab9c744a6e4",
			"children": [
				"src/octokit/get-webhooks.ts-simstep-8c6967e5-b135-4b43-8825-10e4caa456c1"
			]
		},
		"src/octokit/octokit-plugin-probot-request-logging.ts": {
			"path": "src/octokit/octokit-plugin-probot-request-logging.ts",
			"fileName": "octokit-plugin-probot-request-logging.ts",
			"cellName": "octokit-plugin-probot-request-logging.ts",
			"cellId": "00b013f5-ad2c-4f55-8fd4-fc246132ae9b",
			"visible": true,
			"parentCellId": "bd0e0141-c889-4091-84f0-eab9c744a6e4",
			"children": [
				"src/octokit/octokit-plugin-probot-request-logging.ts-simstep-945c6855-6e5b-4e22-8d26-56db6fe1eec8"
			]
		},
		"src/octokit/octokit-webhooks-transform.ts": {
			"path": "src/octokit/octokit-webhooks-transform.ts",
			"fileName": "octokit-webhooks-transform.ts",
			"cellName": "octokit-webhooks-transform.ts",
			"cellId": "69c8e729-0ed2-4dd5-868d-1c908687e4e3",
			"visible": true,
			"parentCellId": "bd0e0141-c889-4091-84f0-eab9c744a6e4",
			"children": [
				"src/octokit/octokit-webhooks-transform.ts-simstep-9c859246-7eb3-47da-be0b-1c3518a6bfce"
			]
		},
		"src/octokit/probot-octokit.ts": {
			"path": "src/octokit/probot-octokit.ts",
			"fileName": "probot-octokit.ts",
			"cellName": "probot-octokit.ts",
			"cellId": "dce94390-cb79-4009-87f5-4bffa4b0b2cc",
			"visible": true,
			"parentCellId": "bd0e0141-c889-4091-84f0-eab9c744a6e4"
		},
		"src/probot.ts": {
			"path": "src/probot.ts",
			"fileName": "probot.ts",
			"cellName": "probot.ts",
			"cellId": "21b2899a-79ff-443c-827c-495f5147fc83",
			"visible": true,
			"parentCellId": "bb0dfd53-d4cf-44ed-9c44-7a0e74e6bcf6",
			"children": [
				"src/probot.ts-simstep-0b194fcd-9e29-49d7-a70b-18def62ba1a9",
				"src/probot.ts-simstep-23f328ae-b1d2-40df-9bb6-ed736323e81c",
				"src/probot.ts-simstep-c36dc3cf-905d-424e-b6ab-a30729337538",
				"src/probot.ts-simstep-5a8f0e27-0e17-4891-9ff1-91b4fcd58537",
				"src/probot.ts-simstep-2cf35c17-020c-46f5-aa17-5527ff2cc459"
			]
		},
		"src/run.ts": {
			"path": "src/run.ts",
			"fileName": "run.ts",
			"cellName": "run.ts",
			"cellId": "355085bb-69fc-4cac-b6e4-da4dc065f41c",
			"visible": true,
			"parentCellId": "bb0dfd53-d4cf-44ed-9c44-7a0e74e6bcf6",
			"children": [
				"src/run.ts-simstep-6ea7eebb-348d-4e10-a816-0662c45f03a3"
			]
		},
		"src/server": {
			"path": "src/server",
			"fileName": "server",
			"cellName": "server",
			"cellId": "fa26ea0a-f831-4436-b57d-bb2e95b84364",
			"visible": true,
			"parentCellId": "bb0dfd53-d4cf-44ed-9c44-7a0e74e6bcf6",
			"children": [
				"src/server/server.ts"
			]
		},
		"src/server/server.ts": {
			"path": "src/server/server.ts",
			"fileName": "server.ts",
			"cellName": "server.ts",
			"cellId": "aa6def95-1c33-47cb-a3f3-1c16395c710c",
			"visible": true,
			"parentCellId": "fa26ea0a-f831-4436-b57d-bb2e95b84364",
			"children": [
				"src/server/server.ts-simstep-9518b315-e942-4c4f-ac7c-1b172a697c60"
			]
		},
		"test": {
			"path": "test",
			"fileName": "test",
			"cellName": "test",
			"cellId": "32af6e97-3fa5-4b58-8864-dc37a4c72a25",
			"visible": true,
			"children": [
				"test/e2e"
			]
		},
		"test/e2e": {
			"path": "test/e2e",
			"fileName": "e2e",
			"cellName": "e2e",
			"cellId": "eed1cd01-3174-44d6-a1e0-81684f0f9598",
			"visible": true,
			"parentCellId": "32af6e97-3fa5-4b58-8864-dc37a4c72a25",
			"children": [
				"test/e2e/e2e.test.ts"
			]
		},
		"test/e2e/e2e.test.ts": {
			"path": "test/e2e/e2e.test.ts",
			"fileName": "e2e.test.ts",
			"cellName": "e2e.test.ts",
			"cellId": "e718d010-6ec3-43b3-a6d2-1094f62255f5",
			"visible": true,
			"parentCellId": "eed1cd01-3174-44d6-a1e0-81684f0f9598"
		},
		"bb0dfd53-d4cf-44ed-9c44-7a0e74e6bcf6": {
			"path": "bb0dfd53-d4cf-44ed-9c44-7a0e74e6bcf6",
			"cellName": "src",
			"cellId": "bb0dfd53-d4cf-44ed-9c44-7a0e74e6bcf6",
			"visible": true
		},
		"1231d67d-18e9-487d-b1a7-264a545c5071": {
			"path": "1231d67d-18e9-487d-b1a7-264a545c5071",
			"cellName": "README.md",
			"cellId": "1231d67d-18e9-487d-b1a7-264a545c5071",
			"visible": true
		},
		"355085bb-69fc-4cac-b6e4-da4dc065f41c": {
			"path": "355085bb-69fc-4cac-b6e4-da4dc065f41c",
			"cellName": "run.ts",
			"cellId": "355085bb-69fc-4cac-b6e4-da4dc065f41c",
			"visible": true,
			"parentCellId": "bb0dfd53-d4cf-44ed-9c44-7a0e74e6bcf6"
		},
		"fa26ea0a-f831-4436-b57d-bb2e95b84364": {
			"path": "fa26ea0a-f831-4436-b57d-bb2e95b84364",
			"cellName": "server",
			"cellId": "fa26ea0a-f831-4436-b57d-bb2e95b84364",
			"visible": true,
			"parentCellId": "bb0dfd53-d4cf-44ed-9c44-7a0e74e6bcf6"
		},
		"21b2899a-79ff-443c-827c-495f5147fc83": {
			"path": "21b2899a-79ff-443c-827c-495f5147fc83",
			"cellName": "probot.ts",
			"cellId": "21b2899a-79ff-443c-827c-495f5147fc83",
			"visible": true,
			"parentCellId": "bb0dfd53-d4cf-44ed-9c44-7a0e74e6bcf6"
		},
		"bd0e0141-c889-4091-84f0-eab9c744a6e4": {
			"path": "bd0e0141-c889-4091-84f0-eab9c744a6e4",
			"cellName": "octokit",
			"cellId": "bd0e0141-c889-4091-84f0-eab9c744a6e4",
			"visible": true,
			"parentCellId": "bb0dfd53-d4cf-44ed-9c44-7a0e74e6bcf6"
		},
		"aa6def95-1c33-47cb-a3f3-1c16395c710c": {
			"path": "aa6def95-1c33-47cb-a3f3-1c16395c710c",
			"cellName": "server.ts",
			"cellId": "aa6def95-1c33-47cb-a3f3-1c16395c710c",
			"visible": true,
			"parentCellId": "fa26ea0a-f831-4436-b57d-bb2e95b84364"
		},
		"646f959f-28e2-4e12-bcf3-9491b199e490": {
			"path": "646f959f-28e2-4e12-bcf3-9491b199e490",
			"cellName": "get-webhooks.ts",
			"cellId": "646f959f-28e2-4e12-bcf3-9491b199e490",
			"visible": true,
			"parentCellId": "bd0e0141-c889-4091-84f0-eab9c744a6e4"
		},
		"dce94390-cb79-4009-87f5-4bffa4b0b2cc": {
			"path": "dce94390-cb79-4009-87f5-4bffa4b0b2cc",
			"cellName": "probot-octokit.ts",
			"cellId": "dce94390-cb79-4009-87f5-4bffa4b0b2cc",
			"visible": true,
			"parentCellId": "bd0e0141-c889-4091-84f0-eab9c744a6e4"
		},
		"9a8c6adc-56f6-468d-9a27-04247bb61197": {
			"path": "9a8c6adc-56f6-468d-9a27-04247bb61197",
			"cellName": "get-authenticated-octokit.ts",
			"cellId": "9a8c6adc-56f6-468d-9a27-04247bb61197",
			"visible": true,
			"parentCellId": "bd0e0141-c889-4091-84f0-eab9c744a6e4"
		},
		"f6f28016-e752-4995-a9c3-a1a7a78ac843": {
			"path": "f6f28016-e752-4995-a9c3-a1a7a78ac843",
			"cellName": "Probot Flow: Initialize Probot Application Runtime - run.ts:L39-171",
			"cellId": "f6f28016-e752-4995-a9c3-a1a7a78ac843",
			"visible": true,
			"parentCellId": "355085bb-69fc-4cac-b6e4-da4dc065f41c"
		},
		"src/run.ts-simstep-6ea7eebb-348d-4e10-a816-0662c45f03a3": {
			"path": "src/run.ts-simstep-6ea7eebb-348d-4e10-a816-0662c45f03a3",
			"fileName": "run.ts",
			"wiki": "The `run` function serves as the primary entry point for Probot applications. It parses command-line arguments and environment variables, loads the developer's application function, and prepares the Probot framework for execution. It also initializes the logging system and sets up configuration for the Probot instance and the underlying HTTP server.",
			"cellName": "Probot Flow: Initialize Probot Application Runtime - run.ts:L39-171",
			"cellId": "f6f28016-e752-4995-a9c3-a1a7a78ac843",
			"visible": true,
			"startLine": 39,
			"endLine": 171,
			"parentCellId": "355085bb-69fc-4cac-b6e4-da4dc065f41c",
			"parentPath": "src/run.ts"
		},
		"5206758a-e7d1-4c04-b147-2bb99b980d6a": {
			"path": "5206758a-e7d1-4c04-b147-2bb99b980d6a",
			"cellName": "Probot Flow: Probot Server Setup - server.ts:L61-167",
			"cellId": "5206758a-e7d1-4c04-b147-2bb99b980d6a",
			"visible": true,
			"parentCellId": "aa6def95-1c33-47cb-a3f3-1c16395c710c"
		},
		"src/server/server.ts-simstep-9518b315-e942-4c4f-ac7c-1b172a697c60": {
			"path": "src/server/server.ts-simstep-9518b315-e942-4c4f-ac7c-1b172a697c60",
			"fileName": "server.ts",
			"wiki": "The `Server` class is instantiated with the provided options. It initializes the HTTP server, creates the core `Probot` instance (with its own internal `Octokit` and `Webhooks` instances), loads the developer's application function, and registers essential HTTP handlers (like webhook and static file handlers).",
			"cellName": "Probot Flow: Probot Server Setup - server.ts:L61-167",
			"cellId": "5206758a-e7d1-4c04-b147-2bb99b980d6a",
			"visible": true,
			"startLine": 61,
			"endLine": 167,
			"parentCellId": "aa6def95-1c33-47cb-a3f3-1c16395c710c",
			"parentPath": "src/server/server.ts"
		},
		"c78d085f-5160-4153-bb7c-f04c237ff6dc": {
			"path": "c78d085f-5160-4153-bb7c-f04c237ff6dc",
			"cellName": "Probot Flow: Register Webhook Event Handlers - probot.ts:L271-291",
			"cellId": "c78d085f-5160-4153-bb7c-f04c237ff6dc",
			"visible": true,
			"parentCellId": "21b2899a-79ff-443c-827c-495f5147fc83"
		},
		"src/probot.ts-simstep-0b194fcd-9e29-49d7-a70b-18def62ba1a9": {
			"path": "src/probot.ts-simstep-0b194fcd-9e29-49d7-a70b-18def62ba1a9",
			"fileName": "probot.ts",
			"wiki": "Inside the `Probot` instance, the `app.on()` method is called by the loaded application function. This method registers the provided callback with the internal `@octokit/webhooks` instance for specific GitHub webhook event names (e.g., 'issues.opened'). These callbacks will be invoked when a matching webhook event is received.",
			"cellName": "Probot Flow: Register Webhook Event Handlers - probot.ts:L271-291",
			"cellId": "c78d085f-5160-4153-bb7c-f04c237ff6dc",
			"visible": true,
			"startLine": 271,
			"endLine": 291,
			"parentCellId": "21b2899a-79ff-443c-827c-495f5147fc83",
			"parentPath": "src/probot.ts"
		},
		"cb09dd6f-90d9-415d-962b-dccf395ce2d1": {
			"path": "cb09dd6f-90d9-415d-962b-dccf395ce2d1",
			"cellName": "Probot Flow: Receive and Authenticate Webhook Event - get-webhooks.ts:L19-25",
			"cellId": "cb09dd6f-90d9-415d-962b-dccf395ce2d1",
			"visible": true,
			"parentCellId": "646f959f-28e2-4e12-bcf3-9491b199e490"
		},
		"src/octokit/get-webhooks.ts-simstep-8c6967e5-b135-4b43-8825-10e4caa456c1": {
			"path": "src/octokit/get-webhooks.ts-simstep-8c6967e5-b135-4b43-8825-10e4caa456c1",
			"fileName": "get-webhooks.ts",
			"wiki": "The Probot server's webhook middleware receives the HTTP request. It extracts the webhook headers and body. The `@octokit/webhooks` instance then validates the `X-Hub-Signature-256` header against the configured webhook secret. If valid, it proceeds to process the event, creating a `Context` object, which provides a rich interface to the event data and an authenticated `Octokit` client.",
			"cellName": "Probot Flow: Receive and Authenticate Webhook Event - get-webhooks.ts:L19-25",
			"cellId": "cb09dd6f-90d9-415d-962b-dccf395ce2d1",
			"visible": true,
			"startLine": 19,
			"endLine": 25,
			"parentCellId": "646f959f-28e2-4e12-bcf3-9491b199e490",
			"parentPath": "src/octokit/get-webhooks.ts"
		},
		"d73eb8d7-590c-4805-85ca-5ac7715e3c78": {
			"path": "d73eb8d7-590c-4805-85ca-5ac7715e3c78",
			"cellName": "Probot Flow: Execute Custom App Handler Logic - README.md:L33-36",
			"cellId": "d73eb8d7-590c-4805-85ca-5ac7715e3c78",
			"visible": true,
			"parentCellId": "1231d67d-18e9-487d-b1a7-264a545c5071"
		},
		"README.md-simstep-1fa3242a-30a6-47f3-92c6-e24d99de8400": {
			"path": "README.md-simstep-1fa3242a-30a6-47f3-92c6-e24d99de8400",
			"fileName": "README.md",
			"wiki": "The developer's custom application logic, defined in the `app.on()` callback, is executed. This involves accessing `context.payload` for event data, using `context.log` for logging, and making GitHub API calls via `context.octokit`. For instance, an app might create a comment on an opened issue.",
			"cellName": "Probot Flow: Execute Custom App Handler Logic - README.md:L33-36",
			"cellId": "d73eb8d7-590c-4805-85ca-5ac7715e3c78",
			"visible": true,
			"startLine": 33,
			"endLine": 36,
			"parentCellId": "1231d67d-18e9-487d-b1a7-264a545c5071",
			"parentPath": "README.md"
		},
		"e5501135-ef11-4670-9453-39ef9511a1d9": {
			"path": "e5501135-ef11-4670-9453-39ef9511a1d9",
			"cellName": "Probot Flow: Handle Octokit Authentication and Request - get-authenticated-octokit.ts:L36-76",
			"cellId": "e5501135-ef11-4670-9453-39ef9511a1d9",
			"visible": true,
			"parentCellId": "9a8c6adc-56f6-468d-9a27-04247bb61197"
		},
		"src/octokit/get-authenticated-octokit.ts-simstep-a872dc1a-f796-4da1-a9cb-736bc5464838": {
			"path": "src/octokit/get-authenticated-octokit.ts-simstep-a872dc1a-f796-4da1-a9cb-736bc5464838",
			"fileName": "get-authenticated-octokit.ts",
			"wiki": "Before sending the request to GitHub, the `ProbotOctokit` instance ensures proper authentication. For installation-scoped events, it retrieves an installation access token using the app's private key. It also applies default plugins for logging, throttling, and retries, ensuring the request adheres to GitHub's API guidelines.",
			"cellName": "Probot Flow: Handle Octokit Authentication and Request - get-authenticated-octokit.ts:L36-76",
			"cellId": "e5501135-ef11-4670-9453-39ef9511a1d9",
			"visible": true,
			"startLine": 36,
			"endLine": 76,
			"parentCellId": "9a8c6adc-56f6-468d-9a27-04247bb61197",
			"parentPath": "src/octokit/get-authenticated-octokit.ts"
		},
		"4058a5a1-0fb7-4539-86dd-5f3bf276ee7b": {
			"path": "4058a5a1-0fb7-4539-86dd-5f3bf276ee7b",
			"cellName": "Probot Flow: Process API Response and Complete Event Handling - README.md:L36",
			"cellId": "4058a5a1-0fb7-4539-86dd-5f3bf276ee7b",
			"visible": true,
			"parentCellId": "1231d67d-18e9-487d-b1a7-264a545c5071"
		},
		"README.md-simstep-ffa39cdb-f8f8-4068-8109-22b9508de8b2": {
			"path": "README.md-simstep-ffa39cdb-f8f8-4068-8109-22b9508de8b2",
			"fileName": "README.md",
			"wiki": "The Probot app receives the API response from GitHub. The `context.octokit` call resolves with this response, allowing the app's handler to complete its execution for the current webhook event. Any errors during this process are typically caught by `app.onError`.",
			"cellName": "Probot Flow: Process API Response and Complete Event Handling - README.md:L36",
			"cellId": "4058a5a1-0fb7-4539-86dd-5f3bf276ee7b",
			"visible": true,
			"startLine": 36,
			"endLine": 36,
			"parentCellId": "1231d67d-18e9-487d-b1a7-264a545c5071",
			"parentPath": "README.md"
		},
		"b244ab17-6af0-4dd7-abda-5029a7e5e064": {
			"path": "b244ab17-6af0-4dd7-abda-5029a7e5e064",
			"cellName": "Config: Probot\nConfiguration Passed\nto Server",
			"cellId": "b244ab17-6af0-4dd7-abda-5029a7e5e064",
			"visible": true,
			"parentCellId": "bb0dfd53-d4cf-44ed-9c44-7a0e74e6bcf6"
		},
		"generated-edge-simstep-eb77bf1a-81f4-407f-874a-d46f712a2ffa-b244ab17-6af0-4dd7-abda-5029a7e5e064": {
			"path": "generated-edge-simstep-eb77bf1a-81f4-407f-874a-d46f712a2ffa-b244ab17-6af0-4dd7-abda-5029a7e5e064",
			"fileName": "run.ts",
			"cellName": "Config: Probot Configuration Passed to Server",
			"cellId": "b244ab17-6af0-4dd7-abda-5029a7e5e064",
			"visible": true,
			"startLine": 103,
			"endLine": 110,
			"parentPath": "src/run.ts"
		},
		"af3e6ac8-4137-4cf6-8b10-6980e28925dd": {
			"path": "af3e6ac8-4137-4cf6-8b10-6980e28925dd",
			"cellName": "Data Transformation:\nApp Function\nLoaded into\nProbot",
			"cellId": "af3e6ac8-4137-4cf6-8b10-6980e28925dd",
			"visible": true,
			"parentCellId": "bb0dfd53-d4cf-44ed-9c44-7a0e74e6bcf6"
		},
		"generated-edge-simstep-5fe0b6b8-4f53-4b63-b439-867294a2f3df-af3e6ac8-4137-4cf6-8b10-6980e28925dd": {
			"path": "generated-edge-simstep-5fe0b6b8-4f53-4b63-b439-867294a2f3df-af3e6ac8-4137-4cf6-8b10-6980e28925dd",
			"fileName": "server.ts",
			"cellName": "Data Transformation: App Function Loaded into Probot",
			"cellId": "af3e6ac8-4137-4cf6-8b10-6980e28925dd",
			"visible": true,
			"startLine": 156,
			"endLine": 164,
			"parentPath": "src/server/server.ts"
		},
		"df1879e6-7050-45c5-a1bd-28e8bd7ef605": {
			"path": "df1879e6-7050-45c5-a1bd-28e8bd7ef605",
			"cellName": "API Call:\nGitHub Webhook\nDelivery to\nProbot Server",
			"cellId": "df1879e6-7050-45c5-a1bd-28e8bd7ef605",
			"visible": true,
			"parentCellId": "bb0dfd53-d4cf-44ed-9c44-7a0e74e6bcf6"
		},
		"generated-edge-simstep-b31b8948-3f12-4e04-90ce-645bb05e2101-df1879e6-7050-45c5-a1bd-28e8bd7ef605": {
			"path": "generated-edge-simstep-b31b8948-3f12-4e04-90ce-645bb05e2101-df1879e6-7050-45c5-a1bd-28e8bd7ef605",
			"fileName": "probot.ts",
			"cellName": "API Call: GitHub Webhook Delivery to Probot Server",
			"cellId": "df1879e6-7050-45c5-a1bd-28e8bd7ef605",
			"visible": true,
			"startLine": 179,
			"endLine": 185,
			"parentPath": "src/probot.ts"
		},
		"c59c9c6c-fd02-498b-8756-6072c78c95cf": {
			"path": "c59c9c6c-fd02-498b-8756-6072c78c95cf",
			"cellName": "Data Transmission:\nContext Object\nDelivered to\nHandler",
			"cellId": "c59c9c6c-fd02-498b-8756-6072c78c95cf",
			"visible": true
		},
		"generated-edge-simstep-0f79864e-f01d-4bec-8af7-eea3b7a41210-c59c9c6c-fd02-498b-8756-6072c78c95cf": {
			"path": "generated-edge-simstep-0f79864e-f01d-4bec-8af7-eea3b7a41210-c59c9c6c-fd02-498b-8756-6072c78c95cf",
			"fileName": "get-webhooks.ts",
			"cellName": "Data Transmission: Context Object Delivered to Handler",
			"cellId": "c59c9c6c-fd02-498b-8756-6072c78c95cf",
			"visible": true,
			"startLine": 288,
			"endLine": 291,
			"parentPath": "src/octokit/get-webhooks.ts"
		},
		"b98ecc0e-1cb3-4bc8-98c7-2b9cc165d740": {
			"path": "b98ecc0e-1cb3-4bc8-98c7-2b9cc165d740",
			"cellName": "API Call:\nTransmit GitHub\nAPI Request",
			"cellId": "b98ecc0e-1cb3-4bc8-98c7-2b9cc165d740",
			"visible": true
		},
		"generated-edge-simstep-d65b53fc-321b-46ce-ab7c-71783968ac1c-b98ecc0e-1cb3-4bc8-98c7-2b9cc165d740": {
			"path": "generated-edge-simstep-d65b53fc-321b-46ce-ab7c-71783968ac1c-b98ecc0e-1cb3-4bc8-98c7-2b9cc165d740",
			"fileName": "README.md",
			"cellName": "API Call: Transmit GitHub API Request",
			"cellId": "b98ecc0e-1cb3-4bc8-98c7-2b9cc165d740",
			"visible": true,
			"startLine": 25,
			"endLine": 29,
			"parentPath": "README.md"
		},
		"30c51606-e572-4b02-ac10-6ef34cdc07fc": {
			"path": "30c51606-e572-4b02-ac10-6ef34cdc07fc",
			"cellName": "API Call:\nReceive GitHub\nAPI Response",
			"cellId": "30c51606-e572-4b02-ac10-6ef34cdc07fc",
			"visible": true
		},
		"generated-edge-simstep-4af47b29-3a67-4c73-84b7-82ce4fdc7e52-30c51606-e572-4b02-ac10-6ef34cdc07fc": {
			"path": "generated-edge-simstep-4af47b29-3a67-4c73-84b7-82ce4fdc7e52-30c51606-e572-4b02-ac10-6ef34cdc07fc",
			"fileName": "get-authenticated-octokit.ts",
			"cellName": "API Call: Receive GitHub API Response",
			"cellId": "30c51606-e572-4b02-ac10-6ef34cdc07fc",
			"visible": true,
			"startLine": 25,
			"endLine": 29,
			"parentPath": "src/octokit/get-authenticated-octokit.ts"
		},
		"94262796-7ba1-44c0-9336-cc766815a952": {
			"path": "94262796-7ba1-44c0-9336-cc766815a952",
			"cellName": "docs",
			"cellId": "94262796-7ba1-44c0-9336-cc766815a952",
			"visible": true
		},
		"66daf256-fda1-41f5-8fcb-d21c2457b45f": {
			"path": "66daf256-fda1-41f5-8fcb-d21c2457b45f",
			"cellName": "context.ts",
			"cellId": "66daf256-fda1-41f5-8fcb-d21c2457b45f",
			"visible": true,
			"parentCellId": "bb0dfd53-d4cf-44ed-9c44-7a0e74e6bcf6"
		},
		"f184896a-f610-4cfa-9b3c-e052268b68ee": {
			"path": "f184896a-f610-4cfa-9b3c-e052268b68ee",
			"cellName": "webhooks.md",
			"cellId": "f184896a-f610-4cfa-9b3c-e052268b68ee",
			"visible": true,
			"parentCellId": "94262796-7ba1-44c0-9336-cc766815a952"
		},
		"22104cf8-4f98-4007-bc0d-d1fce0e37ba3": {
			"path": "22104cf8-4f98-4007-bc0d-d1fce0e37ba3",
			"cellName": "Webhook Event Flow: App Registers Event Handlers - probot.ts:L336-349",
			"cellId": "22104cf8-4f98-4007-bc0d-d1fce0e37ba3",
			"visible": true,
			"parentCellId": "21b2899a-79ff-443c-827c-495f5147fc83"
		},
		"src/probot.ts-simstep-23f328ae-b1d2-40df-9bb6-ed736323e81c": {
			"path": "src/probot.ts-simstep-23f328ae-b1d2-40df-9bb6-ed736323e81c",
			"fileName": "probot.ts",
			"wiki": "During the Probot application's startup, the core `Probot` instance calls the user-provided application function. Within this function, developers register specific GitHub webhook event handlers using methods like `app.on()`. This method takes an event name (or an array of names) and an asynchronous callback function. Probot internally validates the event name and stores these callback functions, associating them with the respective events, to be invoked when matching webhooks are received.",
			"cellName": "Webhook Event Flow: App Registers Event Handlers - probot.ts:L336-349",
			"cellId": "22104cf8-4f98-4007-bc0d-d1fce0e37ba3",
			"visible": true,
			"startLine": 336,
			"endLine": 349,
			"parentCellId": "21b2899a-79ff-443c-827c-495f5147fc83",
			"parentPath": "src/probot.ts"
		},
		"1c9e0efd-393a-4e03-8a17-05e0061c3166": {
			"path": "1c9e0efd-393a-4e03-8a17-05e0061c3166",
			"cellName": "Webhook Event Flow: Probot's `receive` Method Invoked - probot.ts:L309-315",
			"cellId": "1c9e0efd-393a-4e03-8a17-05e0061c3166",
			"visible": true,
			"parentCellId": "21b2899a-79ff-443c-827c-495f5147fc83"
		},
		"src/probot.ts-simstep-c36dc3cf-905d-424e-b6ab-a30729337538": {
			"path": "src/probot.ts-simstep-c36dc3cf-905d-424e-b6ab-a30729337538",
			"fileName": "probot.ts",
			"wiki": "Upon receiving the HTTP POST request, Probot's internal server (or a middleware) parses the request body and headers to construct a `WebhookEvent` object. This object, containing the event name, delivery ID, and the full JSON payload, is then passed to the `probot.receive()` method. This method acts as the entry point for all incoming webhook events within the Probot application, ensuring proper initialization and logging before further processing.",
			"cellName": "Webhook Event Flow: Probot's `receive` Method Invoked - probot.ts:L309-315",
			"cellId": "1c9e0efd-393a-4e03-8a17-05e0061c3166",
			"visible": true,
			"startLine": 309,
			"endLine": 315,
			"parentCellId": "21b2899a-79ff-443c-827c-495f5147fc83",
			"parentPath": "src/probot.ts"
		},
		"a261a7e9-7ead-47d0-899a-6aec4c8cefe5": {
			"path": "a261a7e9-7ead-47d0-899a-6aec4c8cefe5",
			"cellName": "Webhook Event Flow: Context Object Initialization and Event Dispatch - context.ts:L49-57",
			"cellId": "a261a7e9-7ead-47d0-899a-6aec4c8cefe5",
			"visible": true,
			"parentCellId": "66daf256-fda1-41f5-8fcb-d21c2457b45f"
		},
		"src/context.ts-simstep-fe49307b-9025-44e8-a357-ec587ab24542": {
			"path": "src/context.ts-simstep-fe49307b-9025-44e8-a357-ec587ab24542",
			"fileName": "context.ts",
			"wiki": "The internal webhooks dispatcher (from `@octokit/webhooks.js`) processes the received `WebhookEvent`. It performs signature verification and then constructs a `Context` object. This `Context` object encapsulates the raw event payload and provides convenient helper methods (like `context.issue()`) and an authenticated `octokit` client tailored for the current installation. Finally, it iterates through all registered `app.on` handlers that match the event type and prepares to invoke them with this new `Context` object.",
			"cellName": "Webhook Event Flow: Context Object Initialization and Event Dispatch - context.ts:L49-57",
			"cellId": "a261a7e9-7ead-47d0-899a-6aec4c8cefe5",
			"visible": true,
			"startLine": 49,
			"endLine": 57,
			"parentCellId": "66daf256-fda1-41f5-8fcb-d21c2457b45f",
			"parentPath": "src/context.ts"
		},
		"6dfb6a88-c5c1-45ce-9e71-16bd9bbf913c": {
			"path": "6dfb6a88-c5c1-45ce-9e71-16bd9bbf913c",
			"cellName": "Webhook Event Flow: App's Custom Logic Execution - README.md:L18-23",
			"cellId": "6dfb6a88-c5c1-45ce-9e71-16bd9bbf913c",
			"visible": true,
			"parentCellId": "1231d67d-18e9-487d-b1a7-264a545c5071"
		},
		"README.md-simstep-14469756-3d44-4c86-a1af-af4433dd90d9": {
			"path": "README.md-simstep-14469756-3d44-4c86-a1af-af4433dd90d9",
			"fileName": "README.md",
			"wiki": "With the `Context` object in hand, the user-defined asynchronous callback function, registered for the specific GitHub event, is executed. This is where the core business logic of the Probot app resides. It can access event payload data (e.g., `context.payload.issue.title`), make authenticated GitHub API calls using `context.octokit` (e.g., to create a comment or add labels), or perform any other custom automation tasks defined by the app developer.",
			"cellName": "Webhook Event Flow: App's Custom Logic Execution - README.md:L18-23",
			"cellId": "6dfb6a88-c5c1-45ce-9e71-16bd9bbf913c",
			"visible": true,
			"startLine": 18,
			"endLine": 23,
			"parentCellId": "1231d67d-18e9-487d-b1a7-264a545c5071",
			"parentPath": "README.md"
		},
		"b82db4c0-0678-4dda-85fe-915a4175f9a3": {
			"path": "b82db4c0-0678-4dda-85fe-915a4175f9a3",
			"cellName": "Webhook Event\nFlow: GitHub\nTransmits Webhook",
			"cellId": "b82db4c0-0678-4dda-85fe-915a4175f9a3",
			"visible": true,
			"parentCellId": "21b2899a-79ff-443c-827c-495f5147fc83"
		},
		"generated-edge-simstep-937193e0-4314-4163-8b16-8471778ba586-b82db4c0-0678-4dda-85fe-915a4175f9a3": {
			"path": "generated-edge-simstep-937193e0-4314-4163-8b16-8471778ba586-b82db4c0-0678-4dda-85fe-915a4175f9a3",
			"fileName": "probot.ts",
			"cellName": "Webhook Event Flow: GitHub Transmits Webhook",
			"cellId": "b82db4c0-0678-4dda-85fe-915a4175f9a3",
			"visible": true,
			"startLine": 6,
			"endLine": 26,
			"parentPath": "src/probot.ts"
		},
		"a194fa71-96af-4bab-a6be-50c443504ece": {
			"path": "a194fa71-96af-4bab-a6be-50c443504ece",
			"cellName": "Webhook Event\nFlow: Event\nTransferred to\nWebhooks Dispatcher",
			"cellId": "a194fa71-96af-4bab-a6be-50c443504ece",
			"visible": true,
			"parentCellId": "bb0dfd53-d4cf-44ed-9c44-7a0e74e6bcf6"
		},
		"generated-edge-simstep-b694d67d-1860-4fc3-82a8-badd3d5a01fe-a194fa71-96af-4bab-a6be-50c443504ece": {
			"path": "generated-edge-simstep-b694d67d-1860-4fc3-82a8-badd3d5a01fe-a194fa71-96af-4bab-a6be-50c443504ece",
			"fileName": "probot.ts",
			"cellName": "Webhook Event Flow: Event Transferred to Webhooks Dispatcher",
			"cellId": "a194fa71-96af-4bab-a6be-50c443504ece",
			"visible": true,
			"startLine": 313,
			"endLine": 313,
			"parentPath": "src/probot.ts"
		},
		"550953d4-d7ad-4252-a42c-2128d5ea4d71": {
			"path": "550953d4-d7ad-4252-a42c-2128d5ea4d71",
			"cellName": "Webhook Event\nFlow: Context\nObject Delivered\nto App\nHandler",
			"cellId": "550953d4-d7ad-4252-a42c-2128d5ea4d71",
			"visible": true
		},
		"generated-edge-simstep-266a13e7-5ca2-4fea-9020-c41354476e3f-550953d4-d7ad-4252-a42c-2128d5ea4d71": {
			"path": "generated-edge-simstep-266a13e7-5ca2-4fea-9020-c41354476e3f-550953d4-d7ad-4252-a42c-2128d5ea4d71",
			"fileName": "context.ts",
			"cellName": "Webhook Event Flow: Context Object Delivered to App Handler",
			"cellId": "550953d4-d7ad-4252-a42c-2128d5ea4d71",
			"visible": true,
			"startLine": 18,
			"endLine": 18,
			"parentPath": "src/context.ts"
		},
		"32af6e97-3fa5-4b58-8864-dc37a4c72a25": {
			"path": "32af6e97-3fa5-4b58-8864-dc37a4c72a25",
			"cellName": "test",
			"cellId": "32af6e97-3fa5-4b58-8864-dc37a4c72a25",
			"visible": true
		},
		"eed1cd01-3174-44d6-a1e0-81684f0f9598": {
			"path": "eed1cd01-3174-44d6-a1e0-81684f0f9598",
			"cellName": "e2e",
			"cellId": "eed1cd01-3174-44d6-a1e0-81684f0f9598",
			"visible": true,
			"parentCellId": "32af6e97-3fa5-4b58-8864-dc37a4c72a25"
		},
		"f9ec4e3c-3737-4fef-acd7-dcb38e027025": {
			"path": "f9ec4e3c-3737-4fef-acd7-dcb38e027025",
			"cellName": "get-probot-octokit-with-defaults.ts",
			"cellId": "f9ec4e3c-3737-4fef-acd7-dcb38e027025",
			"visible": true,
			"parentCellId": "bd0e0141-c889-4091-84f0-eab9c744a6e4"
		},
		"69c8e729-0ed2-4dd5-868d-1c908687e4e3": {
			"path": "69c8e729-0ed2-4dd5-868d-1c908687e4e3",
			"cellName": "octokit-webhooks-transform.ts",
			"cellId": "69c8e729-0ed2-4dd5-868d-1c908687e4e3",
			"visible": true,
			"parentCellId": "bd0e0141-c889-4091-84f0-eab9c744a6e4"
		},
		"00b013f5-ad2c-4f55-8fd4-fc246132ae9b": {
			"path": "00b013f5-ad2c-4f55-8fd4-fc246132ae9b",
			"cellName": "octokit-plugin-probot-request-logging.ts",
			"cellId": "00b013f5-ad2c-4f55-8fd4-fc246132ae9b",
			"visible": true,
			"parentCellId": "bd0e0141-c889-4091-84f0-eab9c744a6e4"
		},
		"e718d010-6ec3-43b3-a6d2-1094f62255f5": {
			"path": "e718d010-6ec3-43b3-a6d2-1094f62255f5",
			"cellName": "e2e.test.ts",
			"cellId": "e718d010-6ec3-43b3-a6d2-1094f62255f5",
			"visible": true,
			"parentCellId": "eed1cd01-3174-44d6-a1e0-81684f0f9598"
		},
		"6568331d-5af6-4ad1-b53f-d42cdec23f97": {
			"path": "6568331d-5af6-4ad1-b53f-d42cdec23f97",
			"cellName": "Probot Initialization and Default Octokit Setup - probot.ts:L161-183",
			"cellId": "6568331d-5af6-4ad1-b53f-d42cdec23f97",
			"visible": true,
			"parentCellId": "21b2899a-79ff-443c-827c-495f5147fc83"
		},
		"src/probot.ts-simstep-5a8f0e27-0e17-4891-9ff1-91b4fcd58537": {
			"path": "src/probot.ts-simstep-5a8f0e27-0e17-4891-9ff1-91b4fcd58537",
			"fileName": "probot.ts",
			"wiki": "The Probot framework initializes. It creates a base ProbotOctokit class, which is an extended Octokit instance pre-configured with essential plugins like retry, throttling, pagination, request logging, and the `createProbotAuth` authentication strategy. This base Octokit is configured with global options passed during Probot instantiation.",
			"cellName": "Probot Initialization and Default Octokit Setup - probot.ts:L161-183",
			"cellId": "6568331d-5af6-4ad1-b53f-d42cdec23f97",
			"visible": true,
			"startLine": 161,
			"endLine": 183,
			"parentCellId": "21b2899a-79ff-443c-827c-495f5147fc83",
			"parentPath": "src/probot.ts"
		},
		"1710ec76-deab-4bff-8b82-c02ae9eb15a9": {
			"path": "1710ec76-deab-4bff-8b82-c02ae9eb15a9",
			"cellName": "Instantiating the Base ProbotOctokit and Webhooks Listener Setup - probot.ts:L180-183",
			"cellId": "1710ec76-deab-4bff-8b82-c02ae9eb15a9",
			"visible": true,
			"parentCellId": "21b2899a-79ff-443c-827c-495f5147fc83"
		},
		"src/probot.ts-simstep-2cf35c17-020c-46f5-aa17-5527ff2cc459": {
			"path": "src/probot.ts-simstep-2cf35c17-020c-46f5-aa17-5527ff2cc459",
			"fileName": "probot.ts",
			"wiki": "The Probot instance creates an internal instance of the configured `ProbotOctokit`. This instance, which is authenticated as the GitHub App, is primarily used for handling webhooks and performing operations that do not require installation-specific authentication. Subsequently, a webhook listener is set up using `getWebhooks` to process incoming GitHub events.",
			"cellName": "Instantiating the Base ProbotOctokit and Webhooks Listener Setup - probot.ts:L180-183",
			"cellId": "1710ec76-deab-4bff-8b82-c02ae9eb15a9",
			"visible": true,
			"startLine": 180,
			"endLine": 183,
			"parentCellId": "21b2899a-79ff-443c-827c-495f5147fc83",
			"parentPath": "src/probot.ts"
		},
		"9cd2b32e-18f4-4b6d-bbb6-b5db9160d25b": {
			"path": "9cd2b32e-18f4-4b6d-bbb6-b5db9160d25b",
			"cellName": "Webhook Event Processing and Context Creation - octokit-webhooks-transform.ts:L18-26",
			"cellId": "9cd2b32e-18f4-4b6d-bbb6-b5db9160d25b",
			"visible": true,
			"parentCellId": "69c8e729-0ed2-4dd5-868d-1c908687e4e3"
		},
		"src/octokit/octokit-webhooks-transform.ts-simstep-9c859246-7eb3-47da-be0b-1c3518a6bfce": {
			"path": "src/octokit/octokit-webhooks-transform.ts-simstep-9c859246-7eb3-47da-be0b-1c3518a6bfce",
			"fileName": "octokit-webhooks-transform.ts",
			"wiki": "The received webhook event is processed by the `@octokit/webhooks` instance. The `webhookTransform` function is then invoked. This function uses the base `ProbotOctokit` (from Step 3) to authenticate as the specific GitHub App installation associated with the event, or as the App itself if no installation ID is present. Finally, a `Context` object is created, encapsulating the event payload, the newly authenticated `ProbotOctokit` instance (`context.octokit`), and a logger. The `x-github-delivery` header is also added to all subsequent requests made via `context.octokit` for traceability.",
			"cellName": "Webhook Event Processing and Context Creation - octokit-webhooks-transform.ts:L18-26",
			"cellId": "9cd2b32e-18f4-4b6d-bbb6-b5db9160d25b",
			"visible": true,
			"startLine": 18,
			"endLine": 26,
			"parentCellId": "69c8e729-0ed2-4dd5-868d-1c908687e4e3",
			"parentPath": "src/octokit/octokit-webhooks-transform.ts"
		},
		"d6e3ea04-7f78-4a63-8f75-7ff387365698": {
			"path": "d6e3ea04-7f78-4a63-8f75-7ff387365698",
			"cellName": "App Event Handler Logic - README.md:L19-27",
			"cellId": "d6e3ea04-7f78-4a63-8f75-7ff387365698",
			"visible": true,
			"parentCellId": "1231d67d-18e9-487d-b1a7-264a545c5071"
		},
		"README.md-simstep-61dd7d91-4018-44c6-9f04-fae757f37fc1": {
			"path": "README.md-simstep-61dd7d91-4018-44c6-9f04-fae757f37fc1",
			"fileName": "README.md",
			"wiki": "The Probot app's registered event handler (e.g., for 'issues.opened') executes. It uses the provided `context` object, specifically `context.octokit`, to construct and initiate a call to the GitHub REST API, such as creating a comment on an issue. The `context.issue()` helper automatically merges repository and issue details into the API parameters.",
			"cellName": "App Event Handler Logic - README.md:L19-27",
			"cellId": "d6e3ea04-7f78-4a63-8f75-7ff387365698",
			"visible": true,
			"startLine": 19,
			"endLine": 27,
			"parentCellId": "1231d67d-18e9-487d-b1a7-264a545c5071",
			"parentPath": "README.md"
		},
		"d5b6e3be-ac3c-4a6a-9ff9-72759ff1cad9": {
			"path": "d5b6e3be-ac3c-4a6a-9ff9-72759ff1cad9",
			"cellName": "API Request Logging and Execution - octokit-plugin-probot-request-logging.ts:L4-25",
			"cellId": "d5b6e3be-ac3c-4a6a-9ff9-72759ff1cad9",
			"visible": true,
			"parentCellId": "00b013f5-ad2c-4f55-8fd4-fc246132ae9b"
		},
		"src/octokit/octokit-plugin-probot-request-logging.ts-simstep-945c6855-6e5b-4e22-8d26-56db6fe1eec8": {
			"path": "src/octokit/octokit-plugin-probot-request-logging.ts-simstep-945c6855-6e5b-4e22-8d26-56db6fe1eec8",
			"fileName": "octokit-plugin-probot-request-logging.ts",
			"wiki": "Before and after the actual HTTP fetch, the `probotRequestLogging` plugin logs the GitHub API request and its response status. Additionally, the `retry` and `throttling` plugins, part of the `ProbotOctokit` instance, handle any network retries or GitHub API rate limiting before the request is finally dispatched over HTTP.",
			"cellName": "API Request Logging and Execution - octokit-plugin-probot-request-logging.ts:L4-25",
			"cellId": "d5b6e3be-ac3c-4a6a-9ff9-72759ff1cad9",
			"visible": true,
			"startLine": 4,
			"endLine": 25,
			"parentCellId": "00b013f5-ad2c-4f55-8fd4-fc246132ae9b",
			"parentPath": "src/octokit/octokit-plugin-probot-request-logging.ts"
		},
		"54181325-3b19-4afc-9304-a897335c61dd": {
			"path": "54181325-3b19-4afc-9304-a897335c61dd",
			"cellName": "Process API Response in App Handler - README.md:L19-27",
			"cellId": "54181325-3b19-4afc-9304-a897335c61dd",
			"visible": true,
			"parentCellId": "1231d67d-18e9-487d-b1a7-264a545c5071"
		},
		"README.md-simstep-82ab5fa7-8cd5-4957-8c0e-65a48f05260e": {
			"path": "README.md-simstep-82ab5fa7-8cd5-4957-8c0e-65a48f05260e",
			"fileName": "README.md",
			"wiki": "The `await` call in the app's handler resolves with the GitHub API response. The app can then continue its execution, potentially logging the success or performing further actions based on the API result.",
			"cellName": "Process API Response in App Handler - README.md:L19-27",
			"cellId": "54181325-3b19-4afc-9304-a897335c61dd",
			"visible": true,
			"startLine": 19,
			"endLine": 27,
			"parentCellId": "1231d67d-18e9-487d-b1a7-264a545c5071",
			"parentPath": "README.md"
		},
		"2fc1331b-c505-4778-8a5f-71ce577cb9bb": {
			"path": "2fc1331b-c505-4778-8a5f-71ce577cb9bb",
			"cellName": "Configured ProbotOctokit\nConstructor",
			"cellId": "2fc1331b-c505-4778-8a5f-71ce577cb9bb",
			"visible": true,
			"parentCellId": "21b2899a-79ff-443c-827c-495f5147fc83"
		},
		"generated-edge-simstep-e7722162-b6ec-4a8d-ad93-d2bd0c017c15-2fc1331b-c505-4778-8a5f-71ce577cb9bb": {
			"path": "generated-edge-simstep-e7722162-b6ec-4a8d-ad93-d2bd0c017c15-2fc1331b-c505-4778-8a5f-71ce577cb9bb",
			"fileName": "probot.ts",
			"cellName": "Configured ProbotOctokit Constructor",
			"cellId": "2fc1331b-c505-4778-8a5f-71ce577cb9bb",
			"visible": true,
			"startLine": 86,
			"endLine": 88,
			"parentPath": "src/probot.ts"
		},
		"3abc06c7-59d1-45d4-a876-32acf7e54feb": {
			"path": "3abc06c7-59d1-45d4-a876-32acf7e54feb",
			"cellName": "Raw GitHub\nWebhook Event",
			"cellId": "3abc06c7-59d1-45d4-a876-32acf7e54feb",
			"visible": true,
			"parentCellId": "bb0dfd53-d4cf-44ed-9c44-7a0e74e6bcf6"
		},
		"generated-edge-simstep-015de531-5221-48c4-84d5-ae8efa4e2932-3abc06c7-59d1-45d4-a876-32acf7e54feb": {
			"path": "generated-edge-simstep-015de531-5221-48c4-84d5-ae8efa4e2932-3abc06c7-59d1-45d4-a876-32acf7e54feb",
			"fileName": "probot.ts",
			"cellName": "Raw GitHub Webhook Event",
			"cellId": "3abc06c7-59d1-45d4-a876-32acf7e54feb",
			"visible": true,
			"startLine": 17,
			"endLine": 24,
			"parentPath": "src/probot.ts"
		},
		"fc9fcf7b-5027-440e-a5f6-01700ad0ecbc": {
			"path": "fc9fcf7b-5027-440e-a5f6-01700ad0ecbc",
			"cellName": "Authenticated Context\nObject to\nApp Handler",
			"cellId": "fc9fcf7b-5027-440e-a5f6-01700ad0ecbc",
			"visible": true
		},
		"generated-edge-simstep-206c05c7-6b20-4aa7-968c-0978868a9bcc-fc9fcf7b-5027-440e-a5f6-01700ad0ecbc": {
			"path": "generated-edge-simstep-206c05c7-6b20-4aa7-968c-0978868a9bcc-fc9fcf7b-5027-440e-a5f6-01700ad0ecbc",
			"fileName": "octokit-webhooks-transform.ts",
			"cellName": "Authenticated Context Object to App Handler",
			"cellId": "fc9fcf7b-5027-440e-a5f6-01700ad0ecbc",
			"visible": true,
			"startLine": 70,
			"endLine": 95,
			"parentPath": "src/octokit/octokit-webhooks-transform.ts"
		},
		"44564d48-adca-40fa-a08b-f784d11aaa85": {
			"path": "44564d48-adca-40fa-a08b-f784d11aaa85",
			"cellName": "GitHub REST\nAPI Request",
			"cellId": "44564d48-adca-40fa-a08b-f784d11aaa85",
			"visible": true
		},
		"generated-edge-simstep-fdb8c787-803a-4025-a916-91eb0e23bf25-44564d48-adca-40fa-a08b-f784d11aaa85": {
			"path": "generated-edge-simstep-fdb8c787-803a-4025-a916-91eb0e23bf25-44564d48-adca-40fa-a08b-f784d11aaa85",
			"fileName": "README.md",
			"cellName": "GitHub REST API Request",
			"cellId": "44564d48-adca-40fa-a08b-f784d11aaa85",
			"visible": true,
			"startLine": 16,
			"endLine": 19,
			"parentPath": "README.md"
		},
		"b9b4a4e9-ffa4-4149-881a-1e5c0ac52f74": {
			"path": "b9b4a4e9-ffa4-4149-881a-1e5c0ac52f74",
			"cellName": "GitHub API\nResponse Data",
			"cellId": "b9b4a4e9-ffa4-4149-881a-1e5c0ac52f74",
			"visible": true
		},
		"generated-edge-simstep-ffa04248-d5d0-44c2-b465-4e9f1800a9da-b9b4a4e9-ffa4-4149-881a-1e5c0ac52f74": {
			"path": "generated-edge-simstep-ffa04248-d5d0-44c2-b465-4e9f1800a9da-b9b4a4e9-ffa4-4149-881a-1e5c0ac52f74",
			"fileName": "octokit-plugin-probot-request-logging.ts",
			"cellName": "GitHub API Response Data",
			"cellId": "b9b4a4e9-ffa4-4149-881a-1e5c0ac52f74",
			"visible": true,
			"startLine": 62,
			"endLine": 70,
			"parentPath": "src/octokit/octokit-plugin-probot-request-logging.ts"
		}
	},
	"simulations": {
		"Develop and Run Custom GitHub Automation Apps": {
			"name": "Develop and Run Custom GitHub Automation Apps",
			"simSteps": [
				{
					"simStepId": "6ea7eebb-348d-4e10-a816-0662c45f03a3",
					"diagramNodeId": "f6f28016-e752-4995-a9c3-a1a7a78ac843",
					"simStepLabel": "Probot Flow: Initialize Probot Application Runtime",
					"simStepDescription": "The `run` function serves as the primary entry point for Probot applications. It parses command-line arguments and environment variables, loads the developer's application function, and prepares the Probot framework for execution. It also initializes the logging system and sets up configuration for the Probot instance and the underlying HTTP server.",
					"isEdge": 0,
					"sourceCodeMapping": {
						"filePath": "src/run.ts",
						"startLine": "39",
						"endLine": "171",
						"relevantVariables": [
							"run",
							"appFnOrArgv",
							"additionalOptions",
							"cliOptions",
							"envOptions",
							"probotOptions",
							"serverOptions",
							"server"
						]
					},
					"inputDataExample": "{\"appFnOrArgv\": [\"node\", \"probot-run\", \"./index.js\", \"--log-level\", \"info\"], \"additionalOptions\": null}",
					"outputDataExample": "{\"appFn\": \"(app) => { app.on('issues.opened', async (context) => { ... }); }\", \"probotOptions\": {\"appId\": 12345, \"privateKey\": \"-----BEGIN RSA PRIVATE KEY-----\\nMIIEpAIBAAKCAQEA1c7+9z5Pad7OejecsQ0bu3aozN3tihPmljnnudb9G3HECdnH\\nlWu2/a1gB9JW5TBQ+AVpum9Okx7KfqkfBKL9mcHgSL0yWMdjMfNOqNtrQqKlN4kE\\np6RD++7sGbzbfZ9arwrlD/HSDAWGdGGJTSOBM6pHehyLmSC3DJoR/CTu0vTGTWXQ\\nrO64Z8tyXQPtVPb/YXrcUhbBp8i72b9Xky0fD6PkEebOy0Ip58XVAn2UPNlNOSPS\\nye+Qjtius0Md4Nie4+X8kwVI2Qjk3dSm0sw/720KJkdVDmrayeljtKBx6AtNQsSX\\ngzQbeMmiqFFkwrG1+zx6E7H7jqIQ9B6bvWKXGwIDAQABAoIBAD8kBBPL6PPhAqUB\\nK1r1/gycfDkUCQRP4DbZHt+458JlFHm8QL6VstKzkrp8mYDRhffY0WJnYJL98tr4\\n4tohsDbqFGwmw2mIaHjl24LuWXyyP4xpAGDpl9IcusjXBxLQLp2m4AKXbWpzb0OL\\nUlrfc1ZooPck2uz7xlMIZOtLlOPjLz2DuejVe24JcwwHzrQWKOfA11R/9e50DVse\\nhnSH/w46Q763y4I0E3BIoUMsolEKzh2ydAAyzkgabGQBUuamZotNfvJoDXeCi1LD\\n8yNCWyTlYpJZJDDXooBU5EAsCvhN1sSRoaXWrlMSDB7r/E+aQyKua4KONqvmoJuC\\n21vSKeECgYEA7yW6wBkVoNhgXnk8XSZv3W+Q0xtdVpidJeNGBVnczlZrummt4xw3\\nxs6zV+rGUDy59yDkKwBKjMMa42Mni7T9Fx8+EKUuhVK3PVQyajoyQqFwT1GORJNz\\nc/eYQ6VYOCSC8OyZmsBM2p+0D4FF2/abwSPMmy0NgyFLCUFVc3OECpkCgYEA5OAm\\nI3wt5s+clg18qS7BKR2DuOFWrzNVcHYXhjx8vOSWV033Oy3yvdUBAhu9A1LUqpwy\\nMa+unIgxmvmUMQEdyHQMcgBsVs10dR/g2xGjMLcwj6kn+xr3JVIZnbRT50YuPhf+\nns1ScdhP6upo9I0/sRsIuN96Gb65JJx94gQ4k9MCgYBO5V6gA2aMQvZAFLUicgzT\\nu/vGea+oYv7tQfaW0J8E/6PYwwaX93Y7Q3QNXCoCzJX5fsNnoFf36mIThGHGiHY6\\ny5bZPPWFDI3hUMa1Hu/35XS85kYOP6sGJjf4kTLyirEcNKJUWH7CXY+00cwvTkOC\\nS4Iz64Aas8AilIhRZ1m3eQKBgQCUW1s9azQRxgeZGFrzC3R340LL530aCeta/6FW\\nCQVOJ9nv84DLYohTVqvVowdNDTb+9Epw/JDxtDJ7Y0YU0cVtdxPOHcocJgdUGHrX\\nZcJjRIt8w8g/s4X6MhKasBYm9s3owALzCuJjGzUKcDHiO2DKu1xXAb0SzRcTzUCn\\n7daCswKBgQDOYPZ2JGmhibqKjjLFm0qzpcQ6RPvPK1/7g0NInmjPMebP0K6eSPx0\\n9/49J6WTD++EajN7FhktUSYxukdWaCocAQJTDNYP0K88G4rtC2IYy5JFn9SWz5oh\\nx//0u+zd/R/QRUzLOw4N72/Hu+UG6MNt5iDZFCtapRaKt6OvSBwy8w==\\n-----END RSA PRIVATE KEY-----\", \"secret\": \"webhook-secret\"}, \"serverOptions\": {\"port\": 3000, \"host\": \"localhost\", \"webhookPath\": \"/api/github/webhooks\", \"log\": {}, \"Probot\": \"[Probot.defaults instance]\"}}"
				},
				{
					"simStepId": "eb77bf1a-81f4-407f-874a-d46f712a2ffa",
					"diagramNodeId": "b244ab17-6af0-4dd7-abda-5029a7e5e064",
					"simStepLabel": "Config: Probot Configuration Passed to Server",
					"simStepDescription": "The parsed configuration (App ID, private key, secret, etc.) along with the initialized logger and `ProbotOctokit` defaults are passed from the `run` function to the `Server` constructor, which will then create a `Probot` instance with these options.",
					"isEdge": 1,
					"sourceCodeMapping": {
						"filePath": "src/run.ts",
						"startLine": "103",
						"endLine": "110",
						"relevantVariables": [
							"serverOptions",
							"probotOptions",
							"Probot.defaults"
						]
					},
					"inputDataExample": "{\"appId\": 12345, \"privateKey\": \"-----BEGIN RSA PRIVATE KEY-----...\", \"secret\": \"webhook-secret\", \"log\": {\"level\":\"info\",\"name\":\"probot\"}, \"Octokit\": \"[ProbotOctokit.defaults instance]\"}",
					"outputDataExample": "{\"appId\": 12345, \"privateKey\": \"-----BEGIN RSA PRIVATE KEY-----...\", \"secret\": \"webhook-secret\", \"log\": {\"level\":\"info\",\"name\":\"probot\"}, \"Octokit\": \"[ProbotOctokit.defaults instance]\"}"
				},
				{
					"simStepId": "9518b315-e942-4c4f-ac7c-1b172a697c60",
					"diagramNodeId": "5206758a-e7d1-4c04-b147-2bb99b980d6a",
					"simStepLabel": "Probot Flow: Probot Server Setup",
					"simStepDescription": "The `Server` class is instantiated with the provided options. It initializes the HTTP server, creates the core `Probot` instance (with its own internal `Octokit` and `Webhooks` instances), loads the developer's application function, and registers essential HTTP handlers (like webhook and static file handlers).",
					"isEdge": 0,
					"sourceCodeMapping": {
						"filePath": "src/server/server.ts",
						"startLine": "61",
						"endLine": "167",
						"relevantVariables": [
							"Server",
							"options",
							"this.#state",
							"probot",
							"loadHandlerFactory",
							"appFn"
						]
					},
					"inputDataExample": "{\"port\": 3000, \"host\": \"localhost\", \"webhookPath\": \"/api/github/webhooks\", \"Probot\": \"[Probot.defaults instance]\", \"log\": {\"level\":\"info\",\"name\":\"probot\"}}",
					"outputDataExample": "{\"probotAppInstance\": \"[Probot instance]\", \"httpServer\": \"[Node.js http.Server instance]\", \"eventListenersRegistered\": true, \"webhookHandlerLoaded\": true}"
				},
				{
					"simStepId": "5fe0b6b8-4f53-4b63-b439-867294a2f3df",
					"diagramNodeId": "af3e6ac8-4137-4cf6-8b10-6980e28925dd",
					"simStepLabel": "Data Transformation: App Function Loaded into Probot",
					"simStepDescription": "The developer's `appFn` is passed to the `Probot` instance via `server.load()`. This function contains the `app.on()` calls that define the app's event handlers. The `Probot` instance internally receives this function and prepares to register its event handlers with its event emitter.",
					"isEdge": 1,
					"sourceCodeMapping": {
						"filePath": "src/server/server.ts",
						"startLine": "156",
						"endLine": "164",
						"relevantVariables": [
							"appFn",
							"this.#state.probot",
							"addHandler"
						]
					},
					"inputDataExample": "{\"appFunction\": \"(app) => { app.on('issues.opened', async (context) => { ... }); }\", \"applicationFunctionOptions\": {\"cwd\": \"/path/to/app\", \"addHandler\": \"[function]\"}}",
					"outputDataExample": "{\"appFunction\": \"(app) => { app.on('issues.opened', async (context) => { ... }); }\", \"applicationFunctionOptions\": {\"cwd\": \"/path/to/app\", \"addHandler\": \"[function]\"}}"
				},
				{
					"simStepId": "0b194fcd-9e29-49d7-a70b-18def62ba1a9",
					"diagramNodeId": "c78d085f-5160-4153-bb7c-f04c237ff6dc",
					"simStepLabel": "Probot Flow: Register Webhook Event Handlers",
					"simStepDescription": "Inside the `Probot` instance, the `app.on()` method is called by the loaded application function. This method registers the provided callback with the internal `@octokit/webhooks` instance for specific GitHub webhook event names (e.g., 'issues.opened'). These callbacks will be invoked when a matching webhook event is received.",
					"isEdge": 0,
					"sourceCodeMapping": {
						"filePath": "src/probot.ts",
						"startLine": "271",
						"endLine": "291",
						"relevantVariables": [
							"this.#state.webhooks",
							"on",
							"eventName",
							"callback",
							"validateEventName"
						]
					},
					"inputDataExample": "{\"eventName\": \"issues.opened\", \"callback\": \"[async function (context) { const issueComment = context.issue({ body: 'Thanks for opening this issue!' }); return context.octokit.issues.createComment(issueComment); }]\"}",
					"outputDataExample": "{\"eventHandlerRegistered\": true, \"eventName\": \"issues.opened\"}"
				},
				{
					"simStepId": "b31b8948-3f12-4e04-90ce-645bb05e2101",
					"diagramNodeId": "df1879e6-7050-45c5-a1bd-28e8bd7ef605",
					"simStepLabel": "API Call: GitHub Webhook Delivery to Probot Server",
					"simStepDescription": "GitHub sends an HTTP POST request containing a webhook event payload to the configured webhook URL of the Probot application. The Probot server receives this request, including headers like `X-GitHub-Event`, `X-GitHub-Delivery`, and `X-Hub-Signature-256` for event type, unique delivery ID, and signature validation, respectively. This data is then passed to the webhook handling middleware.",
					"isEdge": 1,
					"sourceCodeMapping": {
						"filePath": "src/server/server.ts",
						"startLine": "179",
						"endLine": "185",
						"relevantVariables": [
							"this.#state.handlers",
							"this.#state.probot!.getNodeMiddleware"
						]
					},
					"inputDataExample": "{\"method\": \"POST\", \"url\": \"http://localhost:3000/api/github/webhooks\", \"headers\": {\"Content-Type\": \"application/json\", \"X-GitHub-Event\": \"issues\", \"X-GitHub-Delivery\": \"a1b2c3d4-e5f6-7890-1234-567890abcdef\", \"X-Hub-Signature-256\": \"sha256=a5b6c7d8e9f0a1b2c3d4e5f6a7b8c9d0e1f2a3b4c5d6e7f8a9b0c1d2e3f4a5b6\" }, \"body\": {\"action\": \"opened\", \"issue\": {\"id\": 123, \"title\": \"New feature request\", \"body\": \"I'd like to see...\", \"user\": {\"login\": \"octocat\"}}, \"repository\": {\"name\": \"my-repo\", \"owner\": {\"login\": \"octo-org\"}}}}",
					"outputDataExample": "{\"method\": \"POST\", \"url\": \"http://localhost:3000/api/github/webhooks\", \"headers\": {\"Content-Type\": \"application/json\", \"X-GitHub-Event\": \"issues\", \"X-GitHub-Delivery\": \"a1b2c3d4-e5f6-7890-1234-567890abcdef\", \"X-Hub-Signature-256\": \"sha256=a5b6c7d8e9f0a1b2c3d4e5f6a7b8c9d0e1f2a3b4c5d6e7f8a9b0c1d2e3f4a5b6\" }, \"body\": {\"action\": \"opened\", \"issue\": {\"id\": 123, \"title\": \"New feature request\", \"body\": \"I'd like to see...\", \"user\": {\"login\": \"octocat\"}}, \"repository\": {\"name\": \"my-repo\", \"owner\": {\"login\": \"octo-org\"}}}}"
				},
				{
					"simStepId": "8c6967e5-b135-4b43-8825-10e4caa456c1",
					"diagramNodeId": "cb09dd6f-90d9-415d-962b-dccf395ce2d1",
					"simStepLabel": "Probot Flow: Receive and Authenticate Webhook Event",
					"simStepDescription": "The Probot server's webhook middleware receives the HTTP request. It extracts the webhook headers and body. The `@octokit/webhooks` instance then validates the `X-Hub-Signature-256` header against the configured webhook secret. If valid, it proceeds to process the event, creating a `Context` object, which provides a rich interface to the event data and an authenticated `Octokit` client.",
					"isEdge": 0,
					"sourceCodeMapping": {
						"filePath": "src/octokit/get-webhooks.ts",
						"startLine": "19",
						"endLine": "25",
						"relevantVariables": [
							"webhooks",
							"options.log",
							"options.webhookSecret",
							"webhookTransform",
							"webhooks.onError"
						]
					},
					"inputDataExample": "{\"id\": \"a1b2c3d4-e5f6-7890-1234-567890abcdef\", \"name\": \"issues\", \"payload\": {\"action\": \"opened\", \"issue\": {\"id\": 123, \"title\": \"New feature request\", \"user\": {\"login\": \"octocat\"}}, \"repository\": {\"name\": \"my-repo\", \"owner\": {\"login\": \"octo-org\"}}}, \"secret\": \"webhook-secret\"}",
					"outputDataExample": "{\"contextObject\": {\"name\": \"issues\", \"id\": \"a1b2c3d4-e5f6-7890-1234-567890abcdef\", \"payload\": {\"action\": \"opened\", \"issue\": {\"id\": 123, \"title\": \"New feature request\", \"user\": {\"login\": \"octocat\"}}, \"repository\": {\"name\": \"my-repo\", \"owner\": {\"login\": \"octo-org\"}}}, \"octokit\": \"[authenticated Octokit instance]\", \"log\": \"[child logger]\"}}"
				},
				{
					"simStepId": "0f79864e-f01d-4bec-8af7-eea3b7a41210",
					"diagramNodeId": "c59c9c6c-fd02-498b-8756-6072c78c95cf",
					"simStepLabel": "Data Transmission: Context Object Delivered to Handler",
					"simStepDescription": "After successful webhook processing and `Context` object creation, this `context` object, which includes an authenticated `Octokit` instance and the webhook payload, is passed to the developer's registered event handler callback.",
					"isEdge": 1,
					"sourceCodeMapping": {
						"filePath": "src/probot.ts",
						"startLine": "288",
						"endLine": "291",
						"relevantVariables": [
							"this.#state.webhooks.on",
							"eventName",
							"callback"
						]
					},
					"inputDataExample": "{\"contextObject\": {\"name\": \"issues\", \"id\": \"a1b2c3d4-e5f6-7890-1234-567890abcdef\", \"payload\": {\"action\": \"opened\", \"issue\": {\"id\": 123, \"title\": \"New feature request\", \"body\": \"I'd like to see...\", \"user\": {\"login\": \"octocat\"}}, \"repository\": {\"name\": \"my-repo\", \"owner\": {\"login\": \"octo-org\"}}}, \"octokit\": \"[authenticated Octokit instance]\", \"log\": \"[child logger]\"}}",
					"outputDataExample": "{\"contextObject\": {\"name\": \"issues\", \"id\": \"a1b2c3d4-e5f6-7890-1234-567890abcdef\", \"payload\": {\"action\": \"opened\", \"issue\": {\"id\": 123, \"title\": \"New feature request\", \"body\": \"I'd like to see...\", \"user\": {\"login\": \"octocat\"}}, \"repository\": {\"name\": \"my-repo\", \"owner\": {\"login\": \"octo-org\"}}}, \"octokit\": \"[authenticated Octokit instance]\", \"log\": \"[child logger]\"}}"
				},
				{
					"simStepId": "1fa3242a-30a6-47f3-92c6-e24d99de8400",
					"diagramNodeId": "d73eb8d7-590c-4805-85ca-5ac7715e3c78",
					"simStepLabel": "Probot Flow: Execute Custom App Handler Logic",
					"simStepDescription": "The developer's custom application logic, defined in the `app.on()` callback, is executed. This involves accessing `context.payload` for event data, using `context.log` for logging, and making GitHub API calls via `context.octokit`. For instance, an app might create a comment on an opened issue.",
					"isEdge": 0,
					"sourceCodeMapping": {
						"filePath": "README.md",
						"startLine": "33",
						"endLine": "36",
						"relevantVariables": [
							"app.on",
							"context",
							"issueComment",
							"context.issue",
							"context.octokit.issues.createComment"
						]
					},
					"inputDataExample": "{\"context\": {\"name\": \"issues\", \"id\": \"a1b2c3d4...\", \"payload\": {\"action\": \"opened\", \"issue\": {\"id\": 123, \"title\": \"New feature request\", \"user\": {\"login\": \"octocat\"}}, \"repository\": {\"name\": \"my-repo\", \"owner\": {\"login\": \"octo-org\"}}}, \"octokit\": \"[authenticated Octokit instance]\", \"log\": \"[child logger]\"}}",
					"outputDataExample": "{\"apiCallParameters\": {\"owner\": \"octo-org\", \"repo\": \"my-repo\", \"issue_number\": 123, \"body\": \"Thanks for opening this issue!\"}}"
				},
				{
					"simStepId": "d65b53fc-321b-46ce-ab7c-71783968ac1c",
					"diagramNodeId": "b98ecc0e-1cb3-4bc8-98c7-2b9cc165d740",
					"simStepLabel": "API Call: Transmit GitHub API Request",
					"simStepDescription": "The Probot app makes a request to the GitHub API using its `context.octokit` instance. This request, typically an authenticated REST API call (e.g., to create an issue comment), is sent over HTTP to GitHub.",
					"isEdge": 1,
					"sourceCodeMapping": {
						"filePath": "src/octokit/probot-octokit.ts",
						"startLine": "25",
						"endLine": "29",
						"relevantVariables": [
							"ProbotOctokit",
							"defaultOptions.request.fetch"
						]
					},
					"inputDataExample": "{\"method\": \"POST\", \"url\": \"https://api.github.com/repos/octo-org/my-repo/issues/123/comments\", \"headers\": {\"Authorization\": \"token gho_your_installation_token\", \"User-Agent\": \"probot/0.0.0-development\"}, \"body\": {\"body\": \"Thanks for opening this issue!\"}}",
					"outputDataExample": "{\"method\": \"POST\", \"url\": \"https://api.github.com/repos/octo-org/my-repo/issues/123/comments\", \"headers\": {\"Authorization\": \"token gho_your_installation_token\", \"User-Agent\": \"probot/0.0.0-development\"}, \"body\": {\"body\": \"Thanks for opening this issue!\"}}"
				},
				{
					"simStepId": "a872dc1a-f796-4da1-a9cb-736bc5464838",
					"diagramNodeId": "e5501135-ef11-4670-9453-39ef9511a1d9",
					"simStepLabel": "Probot Flow: Handle Octokit Authentication and Request",
					"simStepDescription": "Before sending the request to GitHub, the `ProbotOctokit` instance ensures proper authentication. For installation-scoped events, it retrieves an installation access token using the app's private key. It also applies default plugins for logging, throttling, and retries, ensuring the request adheres to GitHub's API guidelines.",
					"isEdge": 0,
					"sourceCodeMapping": {
						"filePath": "src/octokit/get-authenticated-octokit.ts",
						"startLine": "36",
						"endLine": "76",
						"relevantVariables": [
							"getAuthenticatedOctokit",
							"octokit",
							"log",
							"installationId",
							"octokit.auth",
							"Octokit"
						]
					},
					"inputDataExample": "{\"octokitInstance\": \"[ProbotOctokit instance]\", \"installationId\": 12345, \"log\": \"[logger]\"}",
					"outputDataExample": "{\"authenticatedOctokit\": \"[ProbotOctokit instance with installation token]\", \"githubApiRequestReady\": true}"
				},
				{
					"simStepId": "4af47b29-3a67-4c73-84b7-82ce4fdc7e52",
					"diagramNodeId": "30c51606-e572-4b02-ac10-6ef34cdc07fc",
					"simStepLabel": "API Call: Receive GitHub API Response",
					"simStepDescription": "GitHub processes the API request (e.g., creating a comment) and sends back an HTTP response. This response, typically containing the result of the operation (e.g., the newly created comment object) and a status code (e.g., 201 Created), is received by the Probot app.",
					"isEdge": 1,
					"sourceCodeMapping": {
						"filePath": "src/octokit/probot-octokit.ts",
						"startLine": "25",
						"endLine": "29",
						"relevantVariables": [
							"defaultOptions.request.fetch"
						]
					},
					"inputDataExample": "{\"status\": 201, \"headers\": {\"Content-Type\": \"application/json\"}, \"body\": {\"id\": 123456, \"body\": \"Thanks for opening this issue!\", \"user\": {\"login\": \"probot[bot]\"}}}",
					"outputDataExample": "{\"status\": 201, \"headers\": {\"Content-Type\": \"application/json\"}, \"body\": {\"id\": 123456, \"body\": \"Thanks for opening this issue!\", \"user\": {\"login\": \"probot[bot]\"}}}"
				},
				{
					"simStepId": "ffa39cdb-f8f8-4068-8109-22b9508de8b2",
					"diagramNodeId": "4058a5a1-0fb7-4539-86dd-5f3bf276ee7b",
					"simStepLabel": "Probot Flow: Process API Response and Complete Event Handling",
					"simStepDescription": "The Probot app receives the API response from GitHub. The `context.octokit` call resolves with this response, allowing the app's handler to complete its execution for the current webhook event. Any errors during this process are typically caught by `app.onError`.",
					"isEdge": 0,
					"sourceCodeMapping": {
						"filePath": "README.md",
						"startLine": "36",
						"endLine": "36",
						"relevantVariables": [
							"context.octokit.issues.createComment"
						]
					},
					"inputDataExample": "{\"apiResponse\": {\"id\": 123456, \"body\": \"Thanks for opening this issue!\", \"user\": {\"login\": \"probot[bot]\"}}}",
					"outputDataExample": "{\"eventHandledSuccessfully\": true}"
				}
			],
			"description": "<ul><li>Provides a Node</li><li>js framework for developers to create GitHub Apps</li><li>Simplifies boilerplate for receiving webhooks and authentication</li><li>Allows apps to automate workflows and extend GitHub functionality</li><li>Supports both local development and production deployment</li></ul>",
			"simulationNodesAndEdges": {
				"f6f28016-e752-4995-a9c3-a1a7a78ac843": {
					"simStepIds": [
						"6ea7eebb-348d-4e10-a816-0662c45f03a3"
					]
				},
				"5206758a-e7d1-4c04-b147-2bb99b980d6a": {
					"simStepIds": [
						"9518b315-e942-4c4f-ac7c-1b172a697c60"
					]
				},
				"c78d085f-5160-4153-bb7c-f04c237ff6dc": {
					"simStepIds": [
						"0b194fcd-9e29-49d7-a70b-18def62ba1a9"
					]
				},
				"cb09dd6f-90d9-415d-962b-dccf395ce2d1": {
					"simStepIds": [
						"8c6967e5-b135-4b43-8825-10e4caa456c1"
					]
				},
				"d73eb8d7-590c-4805-85ca-5ac7715e3c78": {
					"simStepIds": [
						"1fa3242a-30a6-47f3-92c6-e24d99de8400"
					]
				},
				"e5501135-ef11-4670-9453-39ef9511a1d9": {
					"simStepIds": [
						"a872dc1a-f796-4da1-a9cb-736bc5464838"
					]
				},
				"4058a5a1-0fb7-4539-86dd-5f3bf276ee7b": {
					"simStepIds": [
						"ffa39cdb-f8f8-4068-8109-22b9508de8b2"
					]
				},
				"b244ab17-6af0-4dd7-abda-5029a7e5e064": {
					"simStepIds": [
						"eb77bf1a-81f4-407f-874a-d46f712a2ffa"
					]
				},
				"af3e6ac8-4137-4cf6-8b10-6980e28925dd": {
					"simStepIds": [
						"5fe0b6b8-4f53-4b63-b439-867294a2f3df"
					]
				},
				"df1879e6-7050-45c5-a1bd-28e8bd7ef605": {
					"simStepIds": [
						"b31b8948-3f12-4e04-90ce-645bb05e2101"
					]
				},
				"c59c9c6c-fd02-498b-8756-6072c78c95cf": {
					"simStepIds": [
						"0f79864e-f01d-4bec-8af7-eea3b7a41210"
					]
				},
				"b98ecc0e-1cb3-4bc8-98c7-2b9cc165d740": {
					"simStepIds": [
						"d65b53fc-321b-46ce-ab7c-71783968ac1c"
					]
				},
				"30c51606-e572-4b02-ac10-6ef34cdc07fc": {
					"simStepIds": [
						"4af47b29-3a67-4c73-84b7-82ce4fdc7e52"
					]
				}
			},
			"isAIGenerated": true,
			"keywords": "app.on,Probot,run.ts",
			"generationPrompt": "Develop and Run Custom GitHub Automation Apps",
			"generationKeywords": "app.on,Probot,run.ts"
		},
		"Reacting to GitHub Webhook Events": {
			"name": "Reacting to GitHub Webhook Events",
			"simSteps": [
				{
					"simStepId": "23f328ae-b1d2-40df-9bb6-ed736323e81c",
					"diagramNodeId": "22104cf8-4f98-4007-bc0d-d1fce0e37ba3",
					"simStepLabel": "Webhook Event Flow: App Registers Event Handlers",
					"simStepDescription": "During the Probot application's startup, the core `Probot` instance calls the user-provided application function. Within this function, developers register specific GitHub webhook event handlers using methods like `app.on()`. This method takes an event name (or an array of names) and an asynchronous callback function. Probot internally validates the event name and stores these callback functions, associating them with the respective events, to be invoked when matching webhooks are received.",
					"isEdge": 0,
					"sourceCodeMapping": {
						"filePath": "src/probot.ts",
						"startLine": "336",
						"endLine": "349",
						"relevantVariables": [
							"eventName",
							"callback",
							"this.#state.initEventListeners",
							"this.#state.webhooks",
							"validateEventName"
						]
					},
					"inputDataExample": "{\"eventName\": \"issues.opened\", \"callback\": \"async (context) => { const issueComment = context.issue({ body: 'Thanks for opening this issue!' }); return context.octokit.issues.createComment(issueComment); }\"}",
					"outputDataExample": "{\"registrationStatus\": \"success\", \"registeredEvent\": \"issues.opened\", \"handlerId\": \"unique-handler-id-123\"}"
				},
				{
					"simStepId": "937193e0-4314-4163-8b16-8471778ba586",
					"diagramNodeId": "b82db4c0-0678-4dda-85fe-915a4175f9a3",
					"simStepLabel": "Webhook Event Flow: GitHub Transmits Webhook",
					"simStepDescription": "GitHub detects an event (e.g., an issue being opened, a pull request being closed) in a repository where the Probot app is installed. It then constructs a JSON payload representing this event and sends it as an HTTP POST request to the Probot app's configured webhook URL, along with specific headers like `X-GitHub-Event` (event type) and `X-Hub-Signature-256` (for verification).",
					"isEdge": 1,
					"sourceCodeMapping": {
						"filePath": "docs/webhooks.md",
						"startLine": "6",
						"endLine": "26",
						"relevantVariables": [
							"GitHub webhooks",
							"app.on",
							"event"
						]
					},
					"inputDataExample": "{\"headers\": {\"Content-Type\": \"application/json\", \"X-GitHub-Event\": \"issues\", \"X-GitHub-Delivery\": \"72d3162e-cc78-11e3-81ab-4c9367dc0958\", \"X-Hub-Signature-256\": \"sha256=2a9e4b7b3a9c7d4e5f6a8b9c0d1e2f3a4b5c6d7e8f9a0b1c2d3e4f5a6b7c8d9e\"}, \"body\": {\"action\": \"opened\", \"issue\": {\"url\": \"https://api.github.com/repos/hiimbex/testing-things/issues/2\", \"repository_url\": \"https://api.github.com/repos/hiimbex/testing-things\", \"id\": 353818379, \"node_id\": \"MDU6SXNzdWUzNTM4MTgzNzk=\", \"number\": 2, \"title\": \"My first issue\", \"user\": {\"login\": \"hiimbex\", \"id\": 6659020}, \"state\": \"open\", \"locked\": false, \"assignee\": null, \"assignees\": [], \"milestone\": null, \"comments\": 0, \"created_at\": \"2018-08-22T20:03:36Z\", \"updated_at\": \"2018-08-22T20:03:36Z\", \"closed_at\": null, \"author_association\": \"OWNER\", \"body\": \"I'm having a problem with this.\", \"labels\": []}, \"repository\": {\"id\": 142171549, \"node_id\": \"MDEwOlJlcG9zaXRvcnkxNDIxNzE1NDk=\", \"name\": \"testing-things\", \"full_name\": \"hiimbex/testing-things\", \"owner\": {\"login\": \"hiimbex\", \"id\": 6659020}, \"private\": false, \"html_url\": \"https://github.com/hiimbex/testing-things\"}, \"sender\": {\"login\": \"hiimbex\", \"id\": 6659020}}}",
					"outputDataExample": "{\"headers\": {\"Content-Type\": \"application/json\", \"X-GitHub-Event\": \"issues\", \"X-GitHub-Delivery\": \"72d3162e-cc78-11e3-81ab-4c9367dc0958\", \"X-Hub-Signature-256\": \"sha256=2a9e4b7b3a9c7d4e5f6a8b9c0d1e2f3a4b5c6d7e8f9a0b1c2d3e4f5a6b7c8d9e\"}, \"body\": {\"action\": \"opened\", \"issue\": {\"url\": \"https://api.github.com/repos/hiimbex/testing-things/issues/2\", \"repository_url\": \"https://api.github.com/repos/hiimbex/testing-things\", \"id\": 353818379, \"node_id\": \"MDU6SXNzdWUzNTM4MTgzNzk=\", \"number\": 2, \"title\": \"My first issue\", \"user\": {\"login\": \"hiimbex\", \"id\": 6659020}, \"state\": \"open\", \"locked\": false, \"assignee\": null, \"assignees\": [], \"milestone\": null, \"comments\": 0, \"created_at\": \"2018-08-22T20:03:36Z\", \"updated_at\": \"2018-08-22T20:03:36Z\", \"closed_at\": null, \"author_association\": \"OWNER\", \"body\": \"I'm having a problem with this.\", \"labels\": []}, \"repository\": {\"id\": 142171549, \"node_id\": \"MDEwOlJlcG9zaXRvcnkxNDIxNzE1NDk=\", \"name\": \"testing-things\", \"full_name\": \"hiimbex/testing-things\", \"owner\": {\"login\": \"hiimbex\", \"id\": 6659020}, \"private\": false, \"html_url\": \"https://github.com/hiimbex/testing-things\"}, \"sender\": {\"login\": \"hiimbex\", \"id\": 6659020}}}"
				},
				{
					"simStepId": "c36dc3cf-905d-424e-b6ab-a30729337538",
					"diagramNodeId": "1c9e0efd-393a-4e03-8a17-05e0061c3166",
					"simStepLabel": "Webhook Event Flow: Probot's `receive` Method Invoked",
					"simStepDescription": "Upon receiving the HTTP POST request, Probot's internal server (or a middleware) parses the request body and headers to construct a `WebhookEvent` object. This object, containing the event name, delivery ID, and the full JSON payload, is then passed to the `probot.receive()` method. This method acts as the entry point for all incoming webhook events within the Probot application, ensuring proper initialization and logging before further processing.",
					"isEdge": 0,
					"sourceCodeMapping": {
						"filePath": "src/probot.ts",
						"startLine": "309",
						"endLine": "315",
						"relevantVariables": [
							"event",
							"this.#state.log",
							"this.#state.webhooks"
						]
					},
					"inputDataExample": "{\"id\": \"72d3162e-cc78-11e3-81ab-4c9367dc0958\", \"name\": \"issues\", \"payload\": {\"action\": \"opened\", \"issue\": {\"url\": \"https://api.github.com/repos/hiimbex/testing-things/issues/2\", \"repository_url\": \"https://api.github.com/repos/hiimbex/testing-things\", \"id\": 353818379, \"node_id\": \"MDU6SXNzdWUzNTM4MTgzNzk=\", \"number\": 2, \"title\": \"My first issue\"}, \"repository\": {\"id\": 142171549, \"name\": \"testing-things\"}, \"sender\": {\"login\": \"hiimbex\", \"id\": 6659020}}}",
					"outputDataExample": "{\"status\": \"Event received and processing initiated\"}"
				},
				{
					"simStepId": "b694d67d-1860-4fc3-82a8-badd3d5a01fe",
					"diagramNodeId": "a194fa71-96af-4bab-a6be-50c443504ece",
					"simStepLabel": "Webhook Event Flow: Event Transferred to Webhooks Dispatcher",
					"simStepDescription": "Inside `probot.receive()`, after initial logging, the `WebhookEvent` object is immediately passed to the internal webhooks dispatcher (an instance of `@octokit/webhooks.js`). This step represents the handover of the processed webhook event from the core Probot `receive` method to the dedicated component responsible for managing and dispatching events to registered listeners.",
					"isEdge": 1,
					"sourceCodeMapping": {
						"filePath": "src/probot.ts",
						"startLine": "313",
						"endLine": "313",
						"relevantVariables": [
							"this.#state.webhooks",
							"event"
						]
					},
					"inputDataExample": "{\"id\": \"72d3162e-cc78-11e3-81ab-4c9367dc0958\", \"name\": \"issues\", \"payload\": {\"action\": \"opened\", \"issue\": {\"url\": \"https://api.github.com/repos/hiimbex/testing-things/issues/2\", \"repository_url\": \"https://api.github.com/repos/hiimbex/testing-things\", \"id\": 353818379, \"node_id\": \"MDU6SXNzdWUzNTM4MTgzNzk=\", \"number\": 2, \"title\": \"My first issue\"}, \"repository\": {\"id\": 142171549, \"name\": \"testing-things\"}, \"sender\": {\"login\": \"hiimbex\", \"id\": 6659020}}}",
					"outputDataExample": "{\"id\": \"72d3162e-cc78-11e3-81ab-4c9367dc0958\", \"name\": \"issues\", \"payload\": {\"action\": \"opened\", \"issue\": {\"url\": \"https://api.github.com/repos/hiimbex/testing-things/issues/2\", \"repository_url\": \"https://api.github.com/repos/hiimbex/testing-things\", \"id\": 353818379, \"node_id\": \"MDU6SXNzdWUzNTM4MTgzNzk=\", \"number\": 2, \"title\": \"My first issue\"}, \"repository\": {\"id\": 142171549, \"name\": \"testing-things\"}, \"sender\": {\"login\": \"hiimbex\", \"id\": 6659020}}}"
				},
				{
					"simStepId": "fe49307b-9025-44e8-a357-ec587ab24542",
					"diagramNodeId": "a261a7e9-7ead-47d0-899a-6aec4c8cefe5",
					"simStepLabel": "Webhook Event Flow: Context Object Initialization and Event Dispatch",
					"simStepDescription": "The internal webhooks dispatcher (from `@octokit/webhooks.js`) processes the received `WebhookEvent`. It performs signature verification and then constructs a `Context` object. This `Context` object encapsulates the raw event payload and provides convenient helper methods (like `context.issue()`) and an authenticated `octokit` client tailored for the current installation. Finally, it iterates through all registered `app.on` handlers that match the event type and prepares to invoke them with this new `Context` object.",
					"isEdge": 0,
					"sourceCodeMapping": {
						"filePath": "src/context.ts",
						"startLine": "49",
						"endLine": "57",
						"relevantVariables": [
							"Context",
							"payload",
							"octokit",
							"app.on",
							"event listener"
						]
					},
					"inputDataExample": "{\"id\": \"72d3162e-cc78-11e3-81ab-4c9367dc0958\", \"name\": \"issues\", \"payload\": {\"action\": \"opened\", \"issue\": {\"url\": \"https://api.github.com/repos/hiimbex/testing-things/issues/2\", \"repository_url\": \"https://api.github.com/repos/hiimbex/testing-things\", \"id\": 353818379, \"node_id\": \"MDU6SXNzdWUzNTM4MTgzNzk=\", \"number\": 2, \"title\": \"My first issue\"}, \"repository\": {\"id\": 142171549, \"name\": \"testing-things\"}, \"sender\": {\"login\": \"hiimbex\", \"id\": 6659020}}}",
					"outputDataExample": "{\"context\": {\"id\": \"72d3162e-cc78-11e3-81ab-4c9367dc0958\", \"name\": \"issues\", \"payload\": {\"action\": \"opened\", \"issue\": {\"url\": \"https://api.github.com/repos/hiimbex/testing-things/issues/2\", \"repository_url\": \"https://api.github.com/repos/hiimbex/testing-things\", \"id\": 353818379, \"node_id\": \"MDU6SXNzdWUzNTM4MTgzNzk=\", \"number\": 2, \"title\": \"My first issue\"}, \"repository\": {\"id\": 142171549, \"name\": \"testing-things\"}, \"sender\": {\"login\": \"hiimbex\", \"id\": 6659020}}}, \"octokit\": \"ProbotOctokit instance\", \"log\": \"PinoLogger instance\", \"issue\": \"function()\"}}"
				},
				{
					"simStepId": "266a13e7-5ca2-4fea-9020-c41354476e3f",
					"diagramNodeId": "550953d4-d7ad-4252-a42c-2128d5ea4d71",
					"simStepLabel": "Webhook Event Flow: Context Object Delivered to App Handler",
					"simStepDescription": "The fully prepared `Context` object, which encapsulates the GitHub webhook payload and provides helper methods and an authenticated Octokit client, is now passed as the primary argument to the app's registered event handler function. This is the moment the app's custom logic gains access to all the necessary information to react to the GitHub event.",
					"isEdge": 1,
					"sourceCodeMapping": {
						"filePath": "README.md",
						"startLine": "18",
						"endLine": "18",
						"relevantVariables": [
							"context"
						]
					},
					"inputDataExample": "{\"context\": {\"id\": \"72d3162e-cc78-11e3-81ab-4c9367dc0958\", \"name\": \"issues\", \"payload\": {\"action\": \"opened\", \"issue\": {\"url\": \"https://api.github.com/repos/hiimbex/testing-things/issues/2\", \"repository_url\": \"https://api.github.com/repos/hiimbex/testing-things\", \"id\": 353818379, \"node_id\": \"MDU6SXNzdWUzNTM4MTgzNzk=\", \"number\": 2, \"title\": \"My first issue\"}, \"repository\": {\"id\": 142171549, \"name\": \"testing-things\"}, \"sender\": {\"login\": \"hiimbex\", \"id\": 6659020}}}, \"octokit\": \"ProbotOctokit instance\", \"log\": \"PinoLogger instance\", \"issue\": \"function()\"}}",
					"outputDataExample": "{\"context\": {\"id\": \"72d3162e-cc78-11e3-81ab-4c9367dc0958\", \"name\": \"issues\", \"payload\": {\"action\": \"opened\", \"issue\": {\"url\": \"https://api.github.com/repos/hiimbex/testing-things/issues/2\", \"repository_url\": \"https://api.github.com/repos/hiimbex/testing-things\", \"id\": 353818379, \"node_id\": \"MDU6SXNzdWUzNTM4MTgzNzk=\", \"number\": 2, \"title\": \"My first issue\"}, \"repository\": {\"id\": 142171549, \"name\": \"testing-things\"}, \"sender\": {\"login\": \"hiimbex\", \"id\": 6659020}}}, \"octokit\": \"ProbotOctokit instance\", \"log\": \"PinoLogger instance\", \"issue\": \"function()\"}}"
				},
				{
					"simStepId": "14469756-3d44-4c86-a1af-af4433dd90d9",
					"diagramNodeId": "6dfb6a88-c5c1-45ce-9e71-16bd9bbf913c",
					"simStepLabel": "Webhook Event Flow: App's Custom Logic Execution",
					"simStepDescription": "With the `Context` object in hand, the user-defined asynchronous callback function, registered for the specific GitHub event, is executed. This is where the core business logic of the Probot app resides. It can access event payload data (e.g., `context.payload.issue.title`), make authenticated GitHub API calls using `context.octokit` (e.g., to create a comment or add labels), or perform any other custom automation tasks defined by the app developer.",
					"isEdge": 0,
					"sourceCodeMapping": {
						"filePath": "README.md",
						"startLine": "18",
						"endLine": "23",
						"relevantVariables": [
							"app",
							"context",
							"issueComment",
							"context.octokit.issues.createComment"
						]
					},
					"inputDataExample": "{\"context\": {\"id\": \"72d3162e-cc78-11e3-81ab-4c9367dc0958\", \"name\": \"issues\", \"payload\": {\"action\": \"opened\", \"issue\": {\"url\": \"https://api.github.com/repos/hiimbex/testing-things/issues/2\", \"repository_url\": \"https://api.github.com/repos/hiimbex/testing-things\", \"id\": 353818379, \"node_id\": \"MDU6SXNzdWUzNTM4MTgzNzk=\", \"number\": 2, \"title\": \"My first issue\", \"body\": \"I'm having a problem with this.\"}, \"repository\": {\"id\": 142171549, \"name\": \"testing-things\"}, \"sender\": {\"login\": \"hiimbex\", \"id\": 6659020}}}, \"octokit\": \"ProbotOctokit instance\", \"log\": \"PinoLogger instance\", \"issue\": \"function()\"}}",
					"outputDataExample": "{\"apiCallResult\": {\"commentId\": 12345, \"body\": \"Thanks for opening this issue!\"}}"
				}
			],
			"description": "<ul><li>Enables apps to subscribe to specific GitHub events (e</li><li>g</li><li>, issues</li><li>opened, pull_request</li><li>closed)</li><li>Provides Context object with payload and helper methods for event data</li><li>Allows execution of custom logic in response to these events</li><li>Supports a wide range of GitHub's event types</li></ul>",
			"simulationNodesAndEdges": {
				"22104cf8-4f98-4007-bc0d-d1fce0e37ba3": {
					"simStepIds": [
						"23f328ae-b1d2-40df-9bb6-ed736323e81c"
					]
				},
				"1c9e0efd-393a-4e03-8a17-05e0061c3166": {
					"simStepIds": [
						"c36dc3cf-905d-424e-b6ab-a30729337538"
					]
				},
				"a261a7e9-7ead-47d0-899a-6aec4c8cefe5": {
					"simStepIds": [
						"fe49307b-9025-44e8-a357-ec587ab24542"
					]
				},
				"6dfb6a88-c5c1-45ce-9e71-16bd9bbf913c": {
					"simStepIds": [
						"14469756-3d44-4c86-a1af-af4433dd90d9"
					]
				},
				"b82db4c0-0678-4dda-85fe-915a4175f9a3": {
					"simStepIds": [
						"937193e0-4314-4163-8b16-8471778ba586"
					]
				},
				"a194fa71-96af-4bab-a6be-50c443504ece": {
					"simStepIds": [
						"b694d67d-1860-4fc3-82a8-badd3d5a01fe"
					]
				},
				"550953d4-d7ad-4252-a42c-2128d5ea4d71": {
					"simStepIds": [
						"266a13e7-5ca2-4fea-9020-c41354476e3f"
					]
				}
			},
			"isAIGenerated": true,
			"keywords": "app.on,receive,context.ts",
			"generationPrompt": "Reacting to GitHub Webhook Events",
			"generationKeywords": "app.on,receive,context.ts"
		},
		"Programmatically Interact with GitHub's REST API": {
			"name": "Programmatically Interact with GitHub's REST API",
			"simSteps": [
				{
					"simStepId": "5a8f0e27-0e17-4891-9ff1-91b4fcd58537",
					"diagramNodeId": "6568331d-5af6-4ad1-b53f-d42cdec23f97",
					"simStepLabel": "Probot Initialization and Default Octokit Setup",
					"simStepDescription": "The Probot framework initializes. It creates a base ProbotOctokit class, which is an extended Octokit instance pre-configured with essential plugins like retry, throttling, pagination, request logging, and the `createProbotAuth` authentication strategy. This base Octokit is configured with global options passed during Probot instantiation.",
					"isEdge": 0,
					"sourceCodeMapping": {
						"filePath": "src/probot.ts",
						"startLine": "161",
						"endLine": "183",
						"relevantVariables": [
							"Octokit",
							"getProbotOctokitWithDefaults",
							"this.#state.githubToken",
							"this.#state.OctokitBase",
							"this.#state.appId",
							"this.#state.privateKey",
							"this.#state.cache",
							"this.#state.log",
							"this.#state.redisConfig",
							"this.#state.baseUrl",
							"this.#state.request"
						]
					},
					"inputDataExample": "{\n  \"githubToken\": null,\n  \"appId\": 12345,\n  \"privateKey\": \"-----BEGIN RSA PRIVATE KEY-----\\n...\\n-----END RSA PRIVATE KEY-----\",\n  \"cache\": {},\n  \"log\": {\"level\": 30, \"name\": \"probot\"},\n  \"redisConfig\": null,\n  \"baseUrl\": null,\n  \"request\": {}\n}",
					"outputDataExample": "{\n  \"Octokit\": \"ProbotOctokit class with defaults\",\n  \"authStrategy\": \"createProbotAuth function\",\n  \"plugins\": [\n    \"throttling\",\n    \"retry\",\n    \"paginateRest\",\n    \"restEndpointMethods\",\n    \"config\",\n    \"enterpriseCompatibility\",\n    \"probotRequestLogging\"\n  ]\n}"
				},
				{
					"simStepId": "e7722162-b6ec-4a8d-ad93-d2bd0c017c15",
					"diagramNodeId": "2fc1331b-c505-4778-8a5f-71ce577cb9bb",
					"simStepLabel": "Configured ProbotOctokit Constructor",
					"simStepDescription": "The `getProbotOctokitWithDefaults` function returns a specialized `ProbotOctokit` constructor, which is then used by the Probot instance to create its internal Octokit client. This configured constructor has all the default settings and plugins applied.",
					"isEdge": 1,
					"sourceCodeMapping": {
						"filePath": "src/octokit/get-probot-octokit-with-defaults.ts",
						"startLine": "86",
						"endLine": "88",
						"relevantVariables": [
							"options.Octokit.defaults",
							"options"
						]
					},
					"inputDataExample": "{\n  \"Octokit\": \"ProbotOctokit class with defaults\",\n  \"authStrategy\": \"createProbotAuth function\",\n  \"plugins\": [\n    \"throttling\",\n    \"retry\",\n    \"paginateRest\",\n    \"restEndpointMethods\",\n    \"config\",\n    \"enterpriseCompatibility\",\n    \"probotRequestLogging\"\n  ]\n}",
					"outputDataExample": "{\n  \"Octokit\": \"ProbotOctokit class with defaults\",\n  \"authStrategy\": \"createProbotAuth function\",\n  \"plugins\": [\n    \"throttling\",\n    \"retry\",\n    \"paginateRest\",\n    \"restEndpointMethods\",\n    \"config\",\n    \"enterpriseCompatibility\",\n    \"probotRequestLogging\"\n  ]\n}"
				},
				{
					"simStepId": "2cf35c17-020c-46f5-aa17-5527ff2cc459",
					"diagramNodeId": "1710ec76-deab-4bff-8b82-c02ae9eb15a9",
					"simStepLabel": "Instantiating the Base ProbotOctokit and Webhooks Listener Setup",
					"simStepDescription": "The Probot instance creates an internal instance of the configured `ProbotOctokit`. This instance, which is authenticated as the GitHub App, is primarily used for handling webhooks and performing operations that do not require installation-specific authentication. Subsequently, a webhook listener is set up using `getWebhooks` to process incoming GitHub events.",
					"isEdge": 0,
					"sourceCodeMapping": {
						"filePath": "src/probot.ts",
						"startLine": "180",
						"endLine": "183",
						"relevantVariables": [
							"this.#state.octokit",
							"Octokit",
							"this.#state.webhooks",
							"getWebhooks"
						]
					},
					"inputDataExample": "{\n  \"Octokit\": \"ProbotOctokit class with defaults\",\n  \"log\": {\"level\": 30, \"name\": \"probot\"},\n  \"webhookSecret\": \"development\"\n}",
					"outputDataExample": "{\n  \"octokitInstance\": {\"baseUrl\": \"https://api.github.com\", \"auth\": {\"type\": \"app\"}},\n  \"webhooksInstance\": \"Webhooks event emitter configured with transform\"\n}"
				},
				{
					"simStepId": "015de531-5221-48c4-84d5-ae8efa4e2932",
					"diagramNodeId": "3abc06c7-59d1-45d4-a876-32acf7e54feb",
					"simStepLabel": "Raw GitHub Webhook Event",
					"simStepDescription": "A raw webhook event is received by the Probot server from GitHub. This is the initial HTTP POST request containing the event payload and headers.",
					"isEdge": 1,
					"sourceCodeMapping": {
						"filePath": "src/octokit/get-webhooks.ts",
						"startLine": "17",
						"endLine": "24",
						"relevantVariables": [
							"webhooks",
							"options.webhookSecret",
							"options",
							"event"
						]
					},
					"inputDataExample": "{\n  \"headers\": {\n    \"x-github-event\": \"issues\",\n    \"x-github-delivery\": \"12345678-abcd-efgh-ijkl-9876543210ab\",\n    \"x-hub-signature-256\": \"sha256=...\",\n    \"content-type\": \"application/json\"\n  },\n  \"payload\": {\n    \"action\": \"opened\",\n    \"issue\": {\n      \"url\": \"https://api.github.com/repos/octocat/Hello-World/issues/1347\",\n      \"repository_url\": \"https://api.github.com/repos/octocat/Hello-World\",\n      \"comments_url\": \"https://api.github.com/repos/octocat/Hello-World/issues/1347/comments\",\n      \"id\": 1,\n      \"node_id\": \"MDU6SXNzdWUxNDU3MzUxMDQ=\",\n      \"number\": 1347,\n      \"title\": \"Found a bug\",\n      \"user\": {\"login\": \"octocat\", \"id\": 1, \"type\": \"User\"},\n      \"state\": \"open\",\n      \"locked\": false,\n      \"assignee\": null,\n      \"assignees\": [],\n      \"milestone\": null,\n      \"comments\": 0,\n      \"created_at\": \"2011-04-22T13:33:48Z\",\n      \"updated_at\": \"2011-04-22T13:33:48Z\",\n      \"closed_at\": null,\n      \"author_association\": \"OWNER\",\n      \"body\": \"I'm having a problem with this.\"\n    },\n    \"repository\": {\n      \"id\": 1296269,\n      \"node_id\": \"MDEwOlJlcG9zaXRvcnkxMjk2MjY5\",\n      \"name\": \"Hello-World\",\n      \"full_name\": \"octocat/Hello-World\",\n      \"private\": false,\n      \"owner\": {\"login\": \"octocat\", \"id\": 1, \"type\": \"Organization\"}\n    },\n    \"sender\": {\"login\": \"octocat\", \"id\": 1, \"type\": \"User\"},\n    \"installation\": {\"id\": 1}\n  }\n}",
					"outputDataExample": "{\n  \"headers\": {\n    \"x-github-event\": \"issues\",\n    \"x-github-delivery\": \"12345678-abcd-efgh-ijkl-9876543210ab\",\n    \"x-hub-signature-256\": \"sha256=...\",\n    \"content-type\": \"application/json\"\n  },\n  \"payload\": {\n    \"action\": \"opened\",\n    \"issue\": {\n      \"url\": \"https://api.github.com/repos/octocat/Hello-World/issues/1347\",\n      \"repository_url\": \"https://api.github.com/repos/octocat/Hello-World\",\n      \"comments_url\": \"https://api.github.com/repos/octocat/Hello-World/issues/1347/comments\",\n      \"id\": 1,\n      \"node_id\": \"MDU6SXNzdWUxNDU3MzUxMDQ=\",\n      \"number\": 1347,\n      \"title\": \"Found a bug\",\n      \"user\": {\"login\": \"octocat\", \"id\": 1, \"type\": \"User\"},\n      \"state\": \"open\",\n      \"locked\": false,\n      \"assignee\": null,\n      \"assignees\": [],\n      \"milestone\": null,\n      \"comments\": 0,\n      \"created_at\": \"2011-04-22T13:33:48Z\",\n      \"updated_at\": \"2011-04-22T13:33:48Z\",\n      \"closed_at\": null,\n      \"author_association\": \"OWNER\",\n      \"body\": \"I'm having a problem with this.\"\n    },\n    \"repository\": {\n      \"id\": 1296269,\n      \"node_id\": \"MDEwOlJlcG9zaXRvcnkxMjk2MjY5\",\n      \"name\": \"Hello-World\",\n      \"full_name\": \"octocat/Hello-World\",\n      \"private\": false,\n      \"owner\": {\"login\": \"octocat\", \"id\": 1, \"type\": \"Organization\"}\n    },\n    \"sender\": {\"login\": \"octocat\", \"id\": 1, \"type\": \"User\"},\n    \"installation\": {\"id\": 1}\n  }\n}"
				},
				{
					"simStepId": "9c859246-7eb3-47da-be0b-1c3518a6bfce",
					"diagramNodeId": "9cd2b32e-18f4-4b6d-bbb6-b5db9160d25b",
					"simStepLabel": "Webhook Event Processing and Context Creation",
					"simStepDescription": "The received webhook event is processed by the `@octokit/webhooks` instance. The `webhookTransform` function is then invoked. This function uses the base `ProbotOctokit` (from Step 3) to authenticate as the specific GitHub App installation associated with the event, or as the App itself if no installation ID is present. Finally, a `Context` object is created, encapsulating the event payload, the newly authenticated `ProbotOctokit` instance (`context.octokit`), and a logger. The `x-github-delivery` header is also added to all subsequent requests made via `context.octokit` for traceability.",
					"isEdge": 0,
					"sourceCodeMapping": {
						"filePath": "src/octokit/octokit-webhooks-transform.ts",
						"startLine": "18",
						"endLine": "26",
						"relevantVariables": [
							"options",
							"event",
							"octokit",
							"log",
							"Context"
						]
					},
					"inputDataExample": "{\n  \"options\": {\n    \"log\": {\"level\": 30, \"name\": \"probot\"},\n    \"octokit\": {\"baseUrl\": \"https://api.github.com\", \"auth\": {\"type\": \"app\"}}\n  },\n  \"event\": {\n    \"name\": \"issues\",\n    \"id\": \"12345678-abcd-efgh-ijkl-9876543210ab\",\n    \"payload\": {\n      \"action\": \"opened\",\n      \"issue\": {\"id\": 1347, \"node_id\": \"MDU6SXNzdWUxNDU3MzUxMDQ=\", \"title\": \"Found a bug\"},\n      \"repository\": {\"name\": \"Hello-World\", \"owner\": {\"login\": \"octocat\"}},\n      \"installation\": {\"id\": 1}\n    }\n  }\n}",
					"outputDataExample": "{\n  \"name\": \"issues\",\n  \"id\": \"12345678-abcd-efgh-ijkl-9876543210ab\",\n  \"payload\": {\n    \"action\": \"opened\",\n    \"issue\": {\"id\": 1347, \"node_id\": \"MDU6SXNzdWUxNDU3MzUxMDQ=\", \"title\": \"Found a bug\"},\n    \"repository\": {\"name\": \"Hello-World\", \"owner\": {\"login\": \"octocat\"}},\n    \"installation\": {\"id\": 1}\n  },\n  \"octokit\": {\"baseUrl\": \"https://api.github.com\", \"auth\": {\"type\": \"installation\", \"installationId\": 1}},\n  \"log\": {\"level\": 30, \"name\": \"event\", \"id\": \"12345678-abcd-efgh-ijkl-9876543210ab\"}\n}"
				},
				{
					"simStepId": "206c05c7-6b20-4aa7-968c-0978868a9bcc",
					"diagramNodeId": "fc9fcf7b-5027-440e-a5f6-01700ad0ecbc",
					"simStepLabel": "Authenticated Context Object to App Handler",
					"simStepDescription": "The `Context` object, containing the event details and a fully authenticated `ProbotOctokit` instance (`context.octokit`), is passed to the Probot app's specific event handler (e.g., `app.on('issues.opened', ...)`).",
					"isEdge": 1,
					"sourceCodeMapping": {
						"filePath": "src/context.ts",
						"startLine": "70",
						"endLine": "95",
						"relevantVariables": [
							"event",
							"octokit",
							"log",
							"this.name",
							"this.id",
							"this.payload",
							"options.headers"
						]
					},
					"inputDataExample": "{\n  \"name\": \"issues\",\n  \"id\": \"12345678-abcd-efgh-ijkl-9876543210ab\",\n  \"payload\": {\n    \"action\": \"opened\",\n    \"issue\": {\"id\": 1347, \"node_id\": \"MDU6SXNzdWUxNDU3MzUxMDQ=\", \"title\": \"Found a bug\"},\n    \"repository\": {\"name\": \"Hello-World\", \"owner\": {\"login\": \"octocat\"}},\n    \"installation\": {\"id\": 1}\n  },\n  \"octokit\": {\"baseUrl\": \"https://api.github.com\", \"auth\": {\"type\": \"installation\", \"installationId\": 1}},\n  \"log\": {\"level\": 30, \"name\": \"event\", \"id\": \"12345678-abcd-efgh-ijkl-9876543210ab\"}\n}",
					"outputDataExample": "{\n  \"name\": \"issues\",\n  \"id\": \"12345678-abcd-efgh-ijkl-9876543210ab\",\n  \"payload\": {\n    \"action\": \"opened\",\n    \"issue\": {\"id\": 1347, \"node_id\": \"MDU6SXNzdWUxNDU3MzUxMDQ=\", \"title\": \"Found a bug\"},\n    \"repository\": {\"name\": \"Hello-World\", \"owner\": {\"login\": \"octocat\"}},\n    \"installation\": {\"id\": 1}\n  },\n  \"octokit\": {\"baseUrl\": \"https://api.github.com\", \"auth\": {\"type\": \"installation\", \"installationId\": 1}},\n  \"log\": {\"level\": 30, \"name\": \"event\", \"id\": \"12345678-abcd-efgh-ijkl-9876543210ab\"}\n}"
				},
				{
					"simStepId": "61dd7d91-4018-44c6-9f04-fae757f37fc1",
					"diagramNodeId": "d6e3ea04-7f78-4a63-8f75-7ff387365698",
					"simStepLabel": "App Event Handler Logic",
					"simStepDescription": "The Probot app's registered event handler (e.g., for 'issues.opened') executes. It uses the provided `context` object, specifically `context.octokit`, to construct and initiate a call to the GitHub REST API, such as creating a comment on an issue. The `context.issue()` helper automatically merges repository and issue details into the API parameters.",
					"isEdge": 0,
					"sourceCodeMapping": {
						"filePath": "README.md",
						"startLine": "19",
						"endLine": "27",
						"relevantVariables": [
							"app",
							"context",
							"issueComment",
							"context.issue",
							"context.octokit.issues.createComment",
							"context.log.info"
						]
					},
					"inputDataExample": "{\n  \"context\": {\n    \"name\": \"issues\",\n    \"id\": \"12345678-abcd-efgh-ijkl-9876543210ab\",\n    \"payload\": {\n      \"action\": \"opened\",\n      \"issue\": {\"id\": 1347, \"node_id\": \"MDU6SXNzdWUxNDU3MzUxMDQ=\", \"number\": 1347, \"title\": \"Found a bug\"},\n      \"repository\": {\"name\": \"Hello-World\", \"owner\": {\"login\": \"octocat\"}},\n      \"installation\": {\"id\": 1}\n    },\n    \"octokit\": {\"baseUrl\": \"https://api.github.com\", \"auth\": {\"type\": \"installation\", \"installationId\": 1}},\n    \"log\": {\"level\": 30, \"name\": \"event\", \"id\": \"12345678-abcd-efgh-ijkl-9876543210ab\"}\n  }\n}",
					"outputDataExample": "{\n  \"owner\": \"octocat\",\n  \"repo\": \"Hello-World\",\n  \"issue_number\": 1347,\n  \"body\": \"Thanks for opening this issue!\"\n}"
				},
				{
					"simStepId": "fdb8c787-803a-4025-a916-91eb0e23bf25",
					"diagramNodeId": "44564d48-adca-40fa-a08b-f784d11aaa85",
					"simStepLabel": "GitHub REST API Request",
					"simStepDescription": "The `context.octokit` method call (e.g., `issues.createComment`) is transformed into an outgoing HTTP POST request to the GitHub REST API endpoint. The request includes the authentication token (for the specific installation) and the prepared payload. This outgoing request is also logged by the `probotRequestLogging` plugin.",
					"isEdge": 1,
					"sourceCodeMapping": {
						"filePath": "src/octokit/octokit-plugin-probot-request-logging.ts",
						"startLine": "16",
						"endLine": "19",
						"relevantVariables": [
							"octokit.hook.after",
							"result",
							"options",
							"method",
							"url",
							"params"
						]
					},
					"inputDataExample": "{\n  \"method\": \"POST\",\n  \"url\": \"/repos/octocat/Hello-World/issues/1347/comments\",\n  \"headers\": {\n    \"authorization\": \"token v1.1f699f1069f60xxx\",\n    \"x-github-delivery\": \"12345678-abcd-efgh-ijkl-9876543210ab\",\n    \"user-agent\": \"probot/12.3.4\"\n  },\n  \"body\": {\"body\": \"Thanks for opening this issue!\"}\n}",
					"outputDataExample": "{\n  \"method\": \"POST\",\n  \"url\": \"/repos/octocat/Hello-World/issues/1347/comments\",\n  \"headers\": {\n    \"authorization\": \"token v1.1f699f1069f60xxx\",\n    \"x-github-delivery\": \"12345678-abcd-efgh-ijkl-9876543210ab\",\n    \"user-agent\": \"probot/12.3.4\"\n  },\n  \"body\": {\"body\": \"Thanks for opening this issue!\"}\n}"
				},
				{
					"simStepId": "945c6855-6e5b-4e22-8d26-56db6fe1eec8",
					"diagramNodeId": "d5b6e3be-ac3c-4a6a-9ff9-72759ff1cad9",
					"simStepLabel": "API Request Logging and Execution",
					"simStepDescription": "Before and after the actual HTTP fetch, the `probotRequestLogging` plugin logs the GitHub API request and its response status. Additionally, the `retry` and `throttling` plugins, part of the `ProbotOctokit` instance, handle any network retries or GitHub API rate limiting before the request is finally dispatched over HTTP.",
					"isEdge": 0,
					"sourceCodeMapping": {
						"filePath": "src/octokit/octokit-plugin-probot-request-logging.ts",
						"startLine": "4",
						"endLine": "25",
						"relevantVariables": [
							"octokit.hook.error",
							"octokit.hook.after",
							"error",
							"result",
							"options",
							"method",
							"url",
							"params",
							"msg",
							"octokit.log"
						]
					},
					"inputDataExample": "{\n  \"options\": {\n    \"method\": \"POST\",\n    \"url\": \"/repos/octocat/Hello-World/issues/1347/comments\",\n    \"request\": {\"headers\": {\"x-github-delivery\": \"12345678-abcd-efgh-ijkl-9876543210ab\"}},\n    \"body\": {\"body\": \"Thanks for opening this issue!\"}\n  },\n  \"response\": {\n    \"status\": 201,\n    \"data\": {\"id\": 12345, \"body\": \"Thanks for opening this issue!\"}\n  }\n}",
					"outputDataExample": "{\n  \"status\": 201,\n  \"data\": {\"id\": 12345, \"body\": \"Thanks for opening this issue!\"}\n}"
				},
				{
					"simStepId": "ffa04248-d5d0-44c2-b465-4e9f1800a9da",
					"diagramNodeId": "b9b4a4e9-ffa4-4149-881a-1e5c0ac52f74",
					"simStepLabel": "GitHub API Response Data",
					"simStepDescription": "The GitHub API successfully processes the request and returns a response, typically including a status code and any relevant data (e.g., the newly created comment object).",
					"isEdge": 1,
					"sourceCodeMapping": {
						"filePath": "test/e2e/e2e.test.ts",
						"startLine": "62",
						"endLine": "70",
						"relevantVariables": [
							"res.writeHead",
							"res.end",
							"JSON.stringify"
						]
					},
					"inputDataExample": "{\n  \"status\": 201,\n  \"url\": \"https://api.github.com/repos/octocat/Hello-World/issues/1347/comments\",\n  \"headers\": {\"content-type\": \"application/json\"},\n  \"data\": {\"id\": 12345, \"body\": \"Thanks for opening this issue!\", \"user\": {\"login\": \"probot[bot]\"}}\n}",
					"outputDataExample": "{\n  \"status\": 201,\n  \"url\": \"https://api.github.com/repos/octocat/Hello-World/issues/1347/comments\",\n  \"headers\": {\"content-type\": \"application/json\"},\n  \"data\": {\"id\": 12345, \"body\": \"Thanks for opening this issue!\", \"user\": {\"login\": \"probot[bot]\"}}\n}"
				},
				{
					"simStepId": "82ab5fa7-8cd5-4957-8c0e-65a48f05260e",
					"diagramNodeId": "54181325-3b19-4afc-9304-a897335c61dd",
					"simStepLabel": "Process API Response in App Handler",
					"simStepDescription": "The `await` call in the app's handler resolves with the GitHub API response. The app can then continue its execution, potentially logging the success or performing further actions based on the API result.",
					"isEdge": 0,
					"sourceCodeMapping": {
						"filePath": "README.md",
						"startLine": "19",
						"endLine": "27",
						"relevantVariables": [
							"app",
							"context",
							"issueComment",
							"context.issue",
							"context.octokit.issues.createComment",
							"context.log.info"
						]
					},
					"inputDataExample": "{\n  \"status\": 201,\n  \"url\": \"https://api.github.com/repos/octocat/Hello-World/issues/1347/comments\",\n  \"headers\": {\"content-type\": \"application/json\"},\n  \"data\": {\"id\": 12345, \"body\": \"Thanks for opening this issue!\", \"user\": {\"login\": \"probot[bot]\"}}\n}",
					"outputDataExample": "null"
				}
			],
			"description": "<ul><li>Offers an authenticated Octokit instance (context</li><li>octokit) for making API calls</li><li>Handles authentication as either the GitHub App or a specific installation</li><li>Simplifies common API interactions like commenting on issues, modifying PRs, etc</li><li>Includes plugins for retry, throttling, pagination, and enterprise compatibility</li></ul>",
			"simulationNodesAndEdges": {
				"6568331d-5af6-4ad1-b53f-d42cdec23f97": {
					"simStepIds": [
						"5a8f0e27-0e17-4891-9ff1-91b4fcd58537"
					]
				},
				"1710ec76-deab-4bff-8b82-c02ae9eb15a9": {
					"simStepIds": [
						"2cf35c17-020c-46f5-aa17-5527ff2cc459"
					]
				},
				"9cd2b32e-18f4-4b6d-bbb6-b5db9160d25b": {
					"simStepIds": [
						"9c859246-7eb3-47da-be0b-1c3518a6bfce"
					]
				},
				"d6e3ea04-7f78-4a63-8f75-7ff387365698": {
					"simStepIds": [
						"61dd7d91-4018-44c6-9f04-fae757f37fc1"
					]
				},
				"d5b6e3be-ac3c-4a6a-9ff9-72759ff1cad9": {
					"simStepIds": [
						"945c6855-6e5b-4e22-8d26-56db6fe1eec8"
					]
				},
				"54181325-3b19-4afc-9304-a897335c61dd": {
					"simStepIds": [
						"82ab5fa7-8cd5-4957-8c0e-65a48f05260e"
					]
				},
				"2fc1331b-c505-4778-8a5f-71ce577cb9bb": {
					"simStepIds": [
						"e7722162-b6ec-4a8d-ad93-d2bd0c017c15"
					]
				},
				"3abc06c7-59d1-45d4-a876-32acf7e54feb": {
					"simStepIds": [
						"015de531-5221-48c4-84d5-ae8efa4e2932"
					]
				},
				"fc9fcf7b-5027-440e-a5f6-01700ad0ecbc": {
					"simStepIds": [
						"206c05c7-6b20-4aa7-968c-0978868a9bcc"
					]
				},
				"44564d48-adca-40fa-a08b-f784d11aaa85": {
					"simStepIds": [
						"fdb8c787-803a-4025-a916-91eb0e23bf25"
					]
				},
				"b9b4a4e9-ffa4-4149-881a-1e5c0ac52f74": {
					"simStepIds": [
						"ffa04248-d5d0-44c2-b465-4e9f1800a9da"
					]
				}
			},
			"isAIGenerated": true,
			"keywords": "octokit,auth,ProbotOctokit",
			"generationPrompt": "Programmatically Interact with GitHub's REST API",
			"generationKeywords": "octokit,auth,ProbotOctokit"
		},
		"Streamlined Registration and Configuration of GitHub Apps": {
			"name": "Streamlined Registration and Configuration of GitHub Apps",
			"simSteps": [],
			"description": "<ul><li>Guides developers through the process of creating a new GitHub App</li><li>Automates the generation of an App Manifest from app</li><li>yml and package</li><li>json</li><li>Handles the conversion of manifest code to a registered GitHub App</li><li>Manages the initial setup of APP_ID, PRIVATE_KEY, and WEBHOOK_SECRET</li></ul>",
			"simulationNodesAndEdges": {},
			"isAIGenerated": true,
			"keywords": "ManifestCreation,setupAppFactory,app.yml",
			"generationPrompt": "Streamlined Registration and Configuration of GitHub Apps",
			"generationKeywords": "ManifestCreation,setupAppFactory,app.yml"
		},
		"Configure Apps via Repository Files": {
			"name": "Configure Apps via Repository Files",
			"simSteps": [],
			"description": "<ul><li>Allows apps to read configuration settings from YAML files (e</li><li>g</li><li>,</li><li>github/config</li><li>yml) within the repository</li><li>Supports default configurations and merging with repository-specific overrides</li><li>Ensures configuration is loaded from the default branch for security</li><li>Simplifies app customization without requiring code deployments</li></ul>",
			"simulationNodesAndEdges": {},
			"isAIGenerated": true,
			"keywords": "context.config,config.yml,octokit-plugin-config",
			"generationPrompt": "Configure Apps via Repository Files",
			"generationKeywords": "context.config,config.yml,octokit-plugin-config"
		},
		"Enable Local Development and Testing of GitHub Apps": {
			"name": "Enable Local Development and Testing of GitHub Apps",
			"simSteps": [],
			"description": "<ul><li>Facilitates local development by proxying GitHub webhooks to a local server</li><li>Integrates with smee</li><li>io (or similar tools) to create a public webhook URL</li><li>Allows developers to receive and debug real-time GitHub events locally</li><li>Crucial for rapid iteration and testing during app development</li></ul>",
			"simulationNodesAndEdges": {},
			"isAIGenerated": true,
			"keywords": "WEBHOOK_PROXY_URL,smee-client,createWebhookProxy",
			"generationPrompt": "Enable Local Development and Testing of GitHub Apps",
			"generationKeywords": "WEBHOOK_PROXY_URL,smee-client,createWebhookProxy"
		},
		"Securely Authenticate and Authorize GitHub API Access": {
			"name": "Securely Authenticate and Authorize GitHub API Access",
			"simSteps": [],
			"description": "<ul><li>Manages GitHub App authentication using APP_ID and PRIVATE_KEY</li><li>Handles installation-specific token generation for granular permissions</li><li>Ensures secure access to GitHub API resources according to granted permissions</li><li>Abstracts away complex JWT and installation token management</li></ul>",
			"simulationNodesAndEdges": {},
			"isAIGenerated": true,
			"keywords": "privateKey,APP_ID,authStrategy",
			"generationPrompt": "Securely Authenticate and Authorize GitHub API Access",
			"generationKeywords": "privateKey,APP_ID,authStrategy"
		},
		"Handle GitHub API Rate Limits and Transient Errors Automatically": {
			"name": "Handle GitHub API Rate Limits and Transient Errors Automatically",
			"simSteps": [],
			"description": "<ul><li>Integrates Octokit plugins for automatic rate limit handling</li><li>Retries requests after encountering rate limit errors, improving reliability</li><li>Handles secondary rate limits and transient network errors gracefully</li><li>Reduces developer burden of implementing robust API call logic</li></ul>",
			"simulationNodesAndEdges": {},
			"isAIGenerated": true,
			"keywords": "throttling,retry,ProbotOctokit",
			"generationPrompt": "Handle GitHub API Rate Limits and Transient Errors Automatically",
			"generationKeywords": "throttling,retry,ProbotOctokit"
		},
		"Deploy and Manage GitHub Apps with Integrated Server": {
			"name": "Deploy and Manage GitHub Apps with Integrated Server",
			"simSteps": [],
			"description": "<ul><li>Provides a built-in HTTP server to receive webhooks and serve static content</li><li>Offers createNodeMiddleware for integrating into existing Node</li><li>js servers (e</li><li>g</li><li>, Express)</li><li>Manages server startup, shutdown, and port/host configuration</li><li>Simplifies the operational aspects of running a GitHub App</li></ul>",
			"simulationNodesAndEdges": {},
			"isAIGenerated": true,
			"keywords": "Server,createNodeMiddleware,start()",
			"generationPrompt": "Deploy and Manage GitHub Apps with Integrated Server",
			"generationKeywords": "Server,createNodeMiddleware,start()"
		},
		"Comprehensive Logging and Error Reporting for Apps": {
			"name": "Comprehensive Logging and Error Reporting for Apps",
			"simSteps": [],
			"description": "<ul><li>Integrates Pino for structured and customizable logging</li><li>Provides options for log format (pretty/json) and level (debug, info, error)</li><li>Centralized error handling (app</li><li>onError) for app-wide error capture</li><li>Supports integration with Sentry for external error monitoring</li></ul>",
			"simulationNodesAndEdges": {},
			"isAIGenerated": true,
			"keywords": "pino,log,app.onError",
			"generationPrompt": "Comprehensive Logging and Error Reporting for Apps",
			"generationKeywords": "pino,log,app.onError"
		}
	},
	"cellToPath": {
		"bb0dfd53-d4cf-44ed-9c44-7a0e74e6bcf6": "src",
		"1231d67d-18e9-487d-b1a7-264a545c5071": "README.md",
		"355085bb-69fc-4cac-b6e4-da4dc065f41c": "src/run.ts",
		"fa26ea0a-f831-4436-b57d-bb2e95b84364": "src/server",
		"21b2899a-79ff-443c-827c-495f5147fc83": "src/probot.ts",
		"bd0e0141-c889-4091-84f0-eab9c744a6e4": "src/octokit",
		"aa6def95-1c33-47cb-a3f3-1c16395c710c": "src/server/server.ts",
		"646f959f-28e2-4e12-bcf3-9491b199e490": "src/octokit/get-webhooks.ts",
		"dce94390-cb79-4009-87f5-4bffa4b0b2cc": "src/octokit/probot-octokit.ts",
		"9a8c6adc-56f6-468d-9a27-04247bb61197": "src/octokit/get-authenticated-octokit.ts",
		"f6f28016-e752-4995-a9c3-a1a7a78ac843": "src/run.ts-simstep-6ea7eebb-348d-4e10-a816-0662c45f03a3",
		"5206758a-e7d1-4c04-b147-2bb99b980d6a": "src/server/server.ts-simstep-9518b315-e942-4c4f-ac7c-1b172a697c60",
		"c78d085f-5160-4153-bb7c-f04c237ff6dc": "src/probot.ts-simstep-0b194fcd-9e29-49d7-a70b-18def62ba1a9",
		"cb09dd6f-90d9-415d-962b-dccf395ce2d1": "src/octokit/get-webhooks.ts-simstep-8c6967e5-b135-4b43-8825-10e4caa456c1",
		"d73eb8d7-590c-4805-85ca-5ac7715e3c78": "README.md-simstep-1fa3242a-30a6-47f3-92c6-e24d99de8400",
		"e5501135-ef11-4670-9453-39ef9511a1d9": "src/octokit/get-authenticated-octokit.ts-simstep-a872dc1a-f796-4da1-a9cb-736bc5464838",
		"4058a5a1-0fb7-4539-86dd-5f3bf276ee7b": "README.md-simstep-ffa39cdb-f8f8-4068-8109-22b9508de8b2",
		"b244ab17-6af0-4dd7-abda-5029a7e5e064": "generated-edge-simstep-eb77bf1a-81f4-407f-874a-d46f712a2ffa-b244ab17-6af0-4dd7-abda-5029a7e5e064",
		"af3e6ac8-4137-4cf6-8b10-6980e28925dd": "generated-edge-simstep-5fe0b6b8-4f53-4b63-b439-867294a2f3df-af3e6ac8-4137-4cf6-8b10-6980e28925dd",
		"df1879e6-7050-45c5-a1bd-28e8bd7ef605": "generated-edge-simstep-b31b8948-3f12-4e04-90ce-645bb05e2101-df1879e6-7050-45c5-a1bd-28e8bd7ef605",
		"c59c9c6c-fd02-498b-8756-6072c78c95cf": "generated-edge-simstep-0f79864e-f01d-4bec-8af7-eea3b7a41210-c59c9c6c-fd02-498b-8756-6072c78c95cf",
		"b98ecc0e-1cb3-4bc8-98c7-2b9cc165d740": "generated-edge-simstep-d65b53fc-321b-46ce-ab7c-71783968ac1c-b98ecc0e-1cb3-4bc8-98c7-2b9cc165d740",
		"30c51606-e572-4b02-ac10-6ef34cdc07fc": "generated-edge-simstep-4af47b29-3a67-4c73-84b7-82ce4fdc7e52-30c51606-e572-4b02-ac10-6ef34cdc07fc",
		"94262796-7ba1-44c0-9336-cc766815a952": "docs",
		"66daf256-fda1-41f5-8fcb-d21c2457b45f": "src/context.ts",
		"f184896a-f610-4cfa-9b3c-e052268b68ee": "docs/webhooks.md",
		"22104cf8-4f98-4007-bc0d-d1fce0e37ba3": "src/probot.ts-simstep-23f328ae-b1d2-40df-9bb6-ed736323e81c",
		"1c9e0efd-393a-4e03-8a17-05e0061c3166": "src/probot.ts-simstep-c36dc3cf-905d-424e-b6ab-a30729337538",
		"a261a7e9-7ead-47d0-899a-6aec4c8cefe5": "src/context.ts-simstep-fe49307b-9025-44e8-a357-ec587ab24542",
		"6dfb6a88-c5c1-45ce-9e71-16bd9bbf913c": "README.md-simstep-14469756-3d44-4c86-a1af-af4433dd90d9",
		"b82db4c0-0678-4dda-85fe-915a4175f9a3": "generated-edge-simstep-937193e0-4314-4163-8b16-8471778ba586-b82db4c0-0678-4dda-85fe-915a4175f9a3",
		"a194fa71-96af-4bab-a6be-50c443504ece": "generated-edge-simstep-b694d67d-1860-4fc3-82a8-badd3d5a01fe-a194fa71-96af-4bab-a6be-50c443504ece",
		"550953d4-d7ad-4252-a42c-2128d5ea4d71": "generated-edge-simstep-266a13e7-5ca2-4fea-9020-c41354476e3f-550953d4-d7ad-4252-a42c-2128d5ea4d71",
		"32af6e97-3fa5-4b58-8864-dc37a4c72a25": "test",
		"eed1cd01-3174-44d6-a1e0-81684f0f9598": "test/e2e",
		"f9ec4e3c-3737-4fef-acd7-dcb38e027025": "src/octokit/get-probot-octokit-with-defaults.ts",
		"69c8e729-0ed2-4dd5-868d-1c908687e4e3": "src/octokit/octokit-webhooks-transform.ts",
		"00b013f5-ad2c-4f55-8fd4-fc246132ae9b": "src/octokit/octokit-plugin-probot-request-logging.ts",
		"e718d010-6ec3-43b3-a6d2-1094f62255f5": "test/e2e/e2e.test.ts",
		"6568331d-5af6-4ad1-b53f-d42cdec23f97": "src/probot.ts-simstep-5a8f0e27-0e17-4891-9ff1-91b4fcd58537",
		"1710ec76-deab-4bff-8b82-c02ae9eb15a9": "src/probot.ts-simstep-2cf35c17-020c-46f5-aa17-5527ff2cc459",
		"9cd2b32e-18f4-4b6d-bbb6-b5db9160d25b": "src/octokit/octokit-webhooks-transform.ts-simstep-9c859246-7eb3-47da-be0b-1c3518a6bfce",
		"d6e3ea04-7f78-4a63-8f75-7ff387365698": "README.md-simstep-61dd7d91-4018-44c6-9f04-fae757f37fc1",
		"d5b6e3be-ac3c-4a6a-9ff9-72759ff1cad9": "src/octokit/octokit-plugin-probot-request-logging.ts-simstep-945c6855-6e5b-4e22-8d26-56db6fe1eec8",
		"54181325-3b19-4afc-9304-a897335c61dd": "README.md-simstep-82ab5fa7-8cd5-4957-8c0e-65a48f05260e",
		"2fc1331b-c505-4778-8a5f-71ce577cb9bb": "generated-edge-simstep-e7722162-b6ec-4a8d-ad93-d2bd0c017c15-2fc1331b-c505-4778-8a5f-71ce577cb9bb",
		"3abc06c7-59d1-45d4-a876-32acf7e54feb": "generated-edge-simstep-015de531-5221-48c4-84d5-ae8efa4e2932-3abc06c7-59d1-45d4-a876-32acf7e54feb",
		"fc9fcf7b-5027-440e-a5f6-01700ad0ecbc": "generated-edge-simstep-206c05c7-6b20-4aa7-968c-0978868a9bcc-fc9fcf7b-5027-440e-a5f6-01700ad0ecbc",
		"44564d48-adca-40fa-a08b-f784d11aaa85": "generated-edge-simstep-fdb8c787-803a-4025-a916-91eb0e23bf25-44564d48-adca-40fa-a08b-f784d11aaa85",
		"b9b4a4e9-ffa4-4149-881a-1e5c0ac52f74": "generated-edge-simstep-ffa04248-d5d0-44c2-b465-4e9f1800a9da-b9b4a4e9-ffa4-4149-881a-1e5c0ac52f74"
	}
}